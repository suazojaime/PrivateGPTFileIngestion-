<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2023 Caterpillar -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       ">

    <!-- Hibernate Event Listener -->
    <bean id="hibernateEventListener" class="minestar.platform.persistence.HibernateEventListener" lazy-init="true">
        <property name="ignoreClasses">
            <list>
                <!-- Ignore Events - these are published via the CommsServer -->
                <value>minestar.platform.domain.event.Event</value>
                <!-- Ignore PitModel changes - these are published via the PitModelService -->
                <value>minestar.pitlink.domain.pitmodel.MachineInPit</value>
            </list>
        </property>
    </bean>

    <!-- Hibernate BootstrapServiceRegistry -->
    <bean id="bootstrapServiceRegistryBuilder" class="minestar.platform.persistence.HibernateBootstrapServiceRegistryBuilder" lazy-init="true">
        <property name="integrators">
            <list>
                <ref bean="hibernateEventListener"/>
            </list>
        </property>
    </bean>
    <bean id="bootstrapServiceRegistry" factory-bean="bootstrapServiceRegistryBuilder" factory-method="build" lazy-init="true"/>

    <!-- Hibernate Properties -->
    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <map key-type="java.lang.String" value-type="java.lang.Object">
                <entry key="hibernate.current_session_context_class" value="org.springframework.orm.hibernate5.SpringSessionContext"/>
                <entry key="hibernate.dialect" value-ref="hibernateDialect"/>
                <entry key="hibernate.show_sql" value="false"/>
                <entry key="hibernate.format_sql" value="true"/>
                <entry key="hibernate.use_sql_comments" value="true"/>
                <entry key="hibernate.connection.autocommit" value="false"/>
                <entry key="hibernate.connection.datasource" value-ref="pooledModelDataSource"/>
                <!-- Do not access JDBC metadata to determine dialect and database defaults -->
                <!-- See JdbcServiceImpl.configure() -->
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
    </bean>

    <!-- Hibernate StandardServiceRegistry -->
    <bean id="standardServiceRegistryBuilder" class="minestar.platform.persistence.HibernateStandardServiceRegistryBuilder" lazy-init="true">
        <constructor-arg name="bootstrapServiceRegistry" ref="bootstrapServiceRegistry"/>
        <property name="properties" ref="hibernateProperties"/>
    </bean>
    <bean id="standardServiceRegistry" factory-bean="standardServiceRegistryBuilder" factory-method="build" lazy-init="true"/>

    <!-- Hibernate MetadataSources-->
    <bean id="metadataSources" class="org.hibernate.boot.MetadataSources" lazy-init="true">
        <constructor-arg name="serviceRegistry" ref="standardServiceRegistry"/>
    </bean>

    <bean id="hibernateConfigurationUtils"
          class="com.mincom.gem.metadata.hibernate.HibernateConfigurationUtils"
          lazy-init="true"/>

    <!-- List<File> of all *.hbm.xml files in the installed extensions -->
    <bean id="hibernateMappingFiles"
          factory-bean="hibernateConfigurationUtils" factory-method="getMappingFiles"
          lazy-init="true"/>

    <!-- List<FileSystemResource> of all *.hbm.xml files in the installed extensions -->
    <bean id="hibernateMappingLocations"
          factory-bean="hibernateConfigurationUtils" factory-method="getMappingLocations"
          lazy-init="true"/>

    <!-- Class name of the Hibernate Dialect -->
    <bean id="hibernateDialect"
          factory-bean="hibernateConfigurationUtils" factory-method="getHibernateDialect"
          lazy-init="true"/>

    <!-- Hibernate Metadata Service -->
    <bean id="hibernateMetadataService"
          class="com.mincom.gem.metadata.hibernate.HibernateMetadataService"
          lazy-init="true"
          init-method="init">
        <constructor-arg name="mappingFiles" ref="hibernateMappingFiles"/>
        <constructor-arg name="metadataSources" ref="metadataSources"/>
    </bean>

    <!-- This is a separate (rather than embedded) bean as Terrain injects an additional interceptor -->
    <bean id="minestarChainedInterceptor"
          class="minestar.platform.persistence.ChainedInterceptor"
          lazy-init="true">
        <property name="interceptors">
            <list>
                <ref bean="hibernateEventListener"/>
            </list>
        </property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="minestarSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" lazy-init="true">
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <property name="metadataSources" ref="metadataSources"/>
        <property name="mappingLocations" ref="hibernateMappingLocations"/>
        <property name="physicalNamingStrategy">
            <bean class="minestar.platform.persistence.HibernatePhysicalNamingStrategy"/>
        </property>
        <property name="entityInterceptor" ref="minestarChainedInterceptor"/>
    </bean>

    <bean id="minestarDao" class="minestar.platform.persistence.GenericDaoImpl" abstract="true" lazy-init="true">
        <property name="sessionFactory" ref="minestarSessionFactory"/>
    </bean>

    <bean id="defaultDao" class="minestar.platform.persistence.DefaultDaoImpl" lazy-init="true">
        <property name="sessionFactory" ref="minestarSessionFactory"/>
        <property name="name" value="defaultDao"/>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="minestarTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager" lazy-init="true" primary="true">
        <property name="sessionFactory" ref="minestarSessionFactory"/>
    </bean>

    <!-- JdbcTemplate for accessing the "postgis" database -->
    <bean id="postgisJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" lazy-init="true">
        <constructor-arg ref="pooledGisDataSource"/>
    </bean>

</beans>
