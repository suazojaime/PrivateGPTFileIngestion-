# Copyright (c) 2019 Caterpillar

# $Id: targets_db.properties,v 1.68 2008-01-03 05:50:06 ianb Exp $

reimport.filename=bus/pythonlib/reimport.py
reimport.description=Drop all data from an instance and reimport from a file
reimport.tags=development
reimport.group=Setup
reimport.argcheck=<dataStoreName> <exportFileName>

dsprobe.filename=bus/pythonlib/dsprobe.py
dsprobe.description=Command line utility to check database availability
dsprobe.tags=development
dsprobe.group=Diagnostics
dsprobe.argcheck=<dsName>

exportCalendars.filename=bus/pythonlib/exportCalendars.py
exportCalendars.description=Export calendar information from the historical database
exportCalendars.tags=development
exportCalendars.group=Admin
exportCalendars.argcheck=<filename>

importCalendars.filename=bus/pythonlib/importCalendars.py
importCalendars.description=Import calendar information from an export file into the databases
importCalendars.tags=development
importCalendars.group=Admin
importCalendars.argcheck=<filename>

createDataStores.filename=createDataStores.py
createDataStores.description=Create the model, historical, summary, template and reporting data stores
createDataStores.tags=development
createDataStores.group=Setup
createDataStores.argcheck=[all|ALL] [R] <fileSizing> <homeDrive> [<dataDrives>]
createDataStores.argfileSizing_label=Data File Sizes
createDataStores.argfileSizing_choices=["SERVER","LAPTOP"]
createDataStores.argfileSizing_defaultValue=LAPTOP
createDataStores.argfileSizing_description=LAPTOP will create 100Mb Database Files, SERVER will create 1Gb Database Files
createDataStores.arghomeDrive_label=Home Drive
createDataStores.arghomeDrive_description=Drive where Oracle Admin directories and System tablespaces will be created
createDataStores.arghomeDrive_choices=["C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
createDataStores.arghomeDrive_defaultValue=C
createDataStores.argdataDrives_label=Data Drives
createDataStores.argdataDrives_description=e.g. DE - optional additional data drives (no spaces between) for Minestar tablespaces
createDataStores.argtarget_label=Target
createDataStores.argtarget_description=The target - Minestar or Reporting or Both
createDataStores.invocation=import
createDataStores.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/createDataStores.help

makeDataStores.filename=minestar.platform.persistence.service.tools.MakeDataStoresTool
makeDataStores.description=Upgrade the schema, data and views in the databases to reflect the application model
makeDataStores.tags=admin
makeDataStores.group=Setup
makeDataStores.form=Forms:Tools.makeDataStores
# NOTE: Warning!!!! 'makeDataStores Health' is a heap hungry beast! 'makeDataStores all' only requires ~200M, but
# Health requires 500+M, 600M was used to leave some room for future VIMS updates.
# Do not fiddle with memory without verifying makeDataStores Health also works.
makeDataStores.JAVA_MEM64=-Xms300M -Xmx1280M
makeDataStores.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

schemaTool.filename=minestar.db.util.SchemaTool
schemaTool.description=Find and optionally fix differences between the actual and expected database schema
schemaTool.tags=admin
schemaTool.group=Setup
schemaTool.argnames=diff uuid
schemaTool.JAVA_MEM64=-Xms512m -Xmx1024m
schemaTool.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

performanceStats.filename=minestar.util.metrics.MetricsTool
performanceStats.description=Tool to load performance statistics log files into the PERFORMANCE_STATS table
performanceStats.tags=admin
performanceStats.group=Setup
performanceStats.form=Forms:Tools.performanceStats
performanceStats.JAVA_MEM64=-Xmx1024m
performanceStats.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

showRestarts.filename=minestar.util.ShowRestarts
showRestarts.description=Show recent restarts of the given process (defaults to MineTracking).
showRestarts.tags=admin
showRestarts.group=Admin
showRestarts.argnames=process
showRestarts.argcheck=[<process>]
showRestarts.JAVA_MEM64=-Xms512m -Xmx1024m

trashDBInstance.filename=bus/pythonlib/trashDataStore.py
trashDBInstance.description=Absolutely destroy a database instance. Do not do this. Destroys ALL databases in the instance.
trashDBInstance.argcheck=<_TRASHDB> <homeDrive>

emptyDataStore.filename=bus/pythonlib/emptyDataStore.py
emptyDataStore.description=Drop all schema objects from the given Data Store (eg. _MODELDB)
emptyDataStore.tags=admin
emptyDataStore.group=Admin
emptyDataStore.argcheck=<DatabaseName>
emptyDataStore.argnames=DatabaseName
emptyDataStore.argDatabaseName_choices=choice:sysDbmsInstance
emptyDataStore.argDatabaseName_widget=checkbox

emptyReportingDataStore.filename=bus/pythonlib/emptyReportingDataStore.py
emptyReportingDataStore.description=Drop all schema objects from the given Data Store (eg. _REF)
emptyReportingDataStore.tags=admin
emptyReportingDataStore.group=Admin
emptyReportingDataStore.argcheck=<DatabaseName>
emptyReportingDataStore.argnames=DatabaseName
emptyReportingDataStore.argDatabaseName_choices=choice:sysRepDbmsInstance
emptyReportingDataStore.argDatabaseName_widget=checkbox

checkDataStores.filename=minestar.platform.persistence.service.tools.CheckDataStoresTool
checkDataStores.description=Check that the model, historical, template and reporting data stores are correctly created.
checkDataStores.tags=admin
checkDataStores.group=Diagnostics
checkDataStores.help={MSTAR_HOME}/help/checkDataStores.help

configureDataStoreConnections.filename=bus/pythonlib/configureDataStoreConnections.py
configureDataStoreConnections.instanceType=Oracle
configureDataStoreConnections.description=Setup the database connection configurations based on datastore server and instance settings
configureDataStoreConnections.argcheck=
configureDataStoreConnections.tags=admin
configureDataStoreConnections.group=Diagnostics
configureDataStoreConnections.help={MSTAR_HOME}/help/checkDataStores.help

switchActiveDatabase.filename=bus/pythonlib/switchActiveDatabase.py
switchActiveDatabase.description=Use the specified database role (typically PRODUCTION, STANDBY or TEST) for running MineStar
switchActiveDatabase.tags=admin

replaceDataStoresWithModel.filename=bus/pythonlib/replaceDataStoresWithModel.py
replaceDataStoresWithModel.description=Import a model and pitmodel database and make a matching model/historical pair which is ready to run
replaceDataStoresWithModel.argcheck=[-s] [-r] <modeldumpfile> [<pitmodeldumpfile>]
replaceDataStoresWithModel.argnames=modeldumpfile pitmodeldumpfile
replaceDataStoresWithModel.group=Setup
replaceDataStoresWithModel.tags=admin
replaceDataStoresWithModel.form=Forms:Tools.replaceDataStoresWithModel

migrateFromOracletoSql.filename=bus/pythonlib/migrateFromOracletoSql.py
migrateFromOracletoSql.description=Import a model and pitmodel database to SQL Server database.
migrateFromOracletoSql.argcheck=[<modeldumpfile>] [<pitmodeldumpfile>] [<historicaldumpfile>] [<summarydumpfile>] [<premigratesteps>] [<premigratescript>] [<premigratescript>] [<postmigratesteps>] [<postmigratescript>] [<validate>] [<oracleDatabaseServer>] [<oracleSysPassword>]
migrateFromOracletoSql.argnames= modeldumpfile pitmodeldumpfile historicaldumpfile summarydumpfile premigratesteps premigratescript migrate postmigratesteps postmigratescript validate oracleDatabaseServer oracleSysPassword
migrateFromOracletoSql.group=Setup
migrateFromOracletoSql.tags=admin
migrateFromOracletoSql.form=Forms:Tools.migrateFromOracletoSql

rmanInstance.filename=bus/pythonlib/rmanInstance.py
rmanInstance.description=RMAN
rmanInstance.argcheck=<driveName> <dataDir>
rmanInstance.argnames=driveName dataDir
rmanInstance.group=Diagnostics
rmanInstance.tags=development

import.filename=bus/pythonlib/dbimport.py
import.description=Import a database from a dump file
import.argcheck=<datastore> <dumpfilename>
import.argnames=datastore dumpfilename
import.group=Admin
import.tags=admin

importExportedData.filename=bus/pythonlib/importExportedData.py
importExportedData.description=Import data which was previously exported using DBDataman.
importExportedData.group=Admin
importExportedData.tags=admin

replaceDataStoresWithXml.filename=bus/pythonlib/replaceDataStoresWithXml.py
replaceDataStoresWithXml.description=Import an XML model database and make a matching model/historical pair which is ready to run
replaceDataStoresWithXml.argcheck=<filename>
replaceDataStoresWithXml.argnames=filename
replaceDataStoresWithXml.group=Setup
replaceDataStoresWithXml.tags=admin
replaceDataStoresWithXml.form=Forms:Tools.replaceDataStoresWithXml
replaceDataStoresWithXml.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/replaceDataStoresWithXml.help

populateReportingPeriods.filename=com.mincom.explorer.page.calendar.ReportingEntriesTableModel
populateReportingPeriods.description=Populate the R_CALENDAR_LOOKUP table with default values
populateReportingPeriods.argcheck=

populateCustomerDefaults.filename=com.mincom.explorer.page.calendar.CustomerDefaults
populateCustomerDefaults.description=Populate the R_CUSTOMER_DEFAULTS table with default values
populateCustomerDefaults.argcheck=

runSQLTrace.filename=bus/pythonlib/SqlTrace/runSQLTrace.py
runSQLTrace.description=Controls the running of Sql trace for current sessions
runSQLTrace.instanceType=Oracle
runSQLTrace.tags=admin
runSQLTrace.group=Diagnostics
runSQLTrace.argcheck=<dataStore> <OracleAdminDir> <Program>
runSQLTrace.argdataStore_label=Data Store Name
runSQLTrace.argdataStore_choices={"_MODELDB":"Model","_HISTORICALDB":"Historical"}
runSQLTrace.argdataStore_defaultValue=_HISTORICALDB
runSQLTrace.argdataStore_description=Oracle Database Instance to run SQL trace for
runSQLTrace.argOracleAdminDir_label=Oracle Admin Directory
runSQLTrace.argOracleAdminDir_description=Pathname where Admin Sub-directories are located
runSQLTrace.argOracleAdminDir_defaultValue=/oracle/admin
runSQLTrace.argProgram_label=Program Connection Name to Trace
runSQLTrace.argProgram_description=Name of Program to trace or "all"
runSQLTrace.argProgram_choices=["all","moMineTracking.exe","JDBC Thin Client","BUSOBJ.EXE"]
runSQLTrace.argProgram_defaultValue=all

profileTraceFiles.filename=bus/pythonlib/SqlTrace/profileTraceFiles.py
profileTraceFiles.description=Controls the profiling of Sql trace files
profileTraceFiles.instanceType=Oracle
profileTraceFiles.tags=admin
profileTraceFiles.group=Diagnostics
profileTraceFiles.argcheck=<dataStore> <OracleAdminDir> <TraceFilesDir>
profileTraceFiles.argdataStore_label=Data Store Name
profileTraceFiles.argdataStore_choices={"_MODELDB":"Model","_HISTORICALDB":"Historical"}
profileTraceFiles.argdataStore_defaultValue=_HISTORICALDB
profileTraceFiles.argdataStore_description=Oracle Database Instance to run SQL trace for
profileTraceFiles.argOracleAdminDir_label=Oracle Admin Directory
profileTraceFiles.argOracleAdminDir_description=Pathname where Admin Sub-directories are located
profileTraceFiles.argOracleAdminDir_defaultValue=/oracle/admin
profileTraceFiles.argTraceFilesDir_label=Trace Files Directory
profileTraceFiles.argTraceFilesDir_description=Location of Trace Files
profileTraceFiles.argTraceFilesDir_choices=[".","traceFiles"]
profileTraceFiles.argTraceFilesDir_defaultValue=.

showDbConnections.filename=bus/pythonlib/showDbConnections.py
showDbConnections.description=Exports a monitorDB database to file
showDbConnections.argcheck=<dataStore>
showDbConnections.argdataStore_label=Data Store Name
showDbConnections.argdataStore_choices={"_MODELDB":"Model","_HISTORICALDB":"Historical"}
showDbConnections.argdataStore_defaultValue=_HISTORICALDB
showDbConnections.argdataStore_description=Oracle Database Instance to run script for
showDbConnections.argdataStore_widget=radio
showDbConnections.tags=admin
showDbConnections.group=Diagnostics
showDbConnections.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/showDbConnections.help

exportSnapshotDb.filename=bus/pythonlib/exportMonitorDB.py
exportSnapshotDb.description=Exports a monitorDB database to file
exportSnapshotDb.argcheck=
exportSnapshotDb.tags=development
exportSnapshotDb.group=Admin

startSnapshotDb.filename=bus/pythonlib/startMonitorDB.py
startSnapshotDb.description=Starts a monitorDB server process
startSnapshotDb.argcheck=
startSnapshotDb.tags=development
startSnapshotDb.group=Admin

stopSnapshotDb.filename=bus/pythonlib/stopMonitorDB.py
stopSnapshotDb.description=Stops a monitorDB server process
stopSnapshotDb.argcheck=
stopSnapshotDb.tags=development
stopSnapshotDb.group=Admin

refreshSnapshotDb.filename=bus/pythonlib/refreshSnapshotDb.py
refreshSnapshotDb.description=Deletes aged monitor snapshots from database and restarts server process
refreshSnapshotDb.argcheck=
refreshSnapshotDb.tags=development
refreshSnapshotDb.group=Admin

publishCoordinateSystem.filename=minestar.mine.service.wfs.CRSExporter
publishCoordinateSystem.description=Export the site coordinate system to the GIS server and database
publishCoordinateSystem.tags=admin
publishCoordinateSystem.group=Setup
publishCoordinateSystem.form=Forms:Tools.publishCoordinateSystem
#publishCoordinateSystem.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5013

makeSpatialStores.filename=minestar.mine.service.gis.GISAdministrator
makeSpatialStores.description=Update the GIS server configuration
makeSpatialStores.tags=admin
makeSpatialStores.group=Setup
makeSpatialStores.form=Forms:Tools.makeSpatialStores
makeSpatialStores.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5013

archiveEdgeData.filename=minestar.mine.service.gis.ArchiveEdgeData
archiveEdgeData.description=Archive edge line and edge mesh data
archiveEdgeData.tags=admin
archiveEdgeData.group=Admin
archiveEdgeData.form=Forms:Tools.archiveEdgeData
#archiveEdgeData.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5013

updateG407Onboard.filename=minestar.util.onboard.g407.UpdateG407Files
updateG407Onboard.description= Update G407 onabord files
updateG407Onboard.tags=admin
updateG407Onboard.group=Admin
updateG407Onboard.form=Forms:Tools.updateG407Onboard
updateG407Onboard.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5087


gisDBDataMan.filename=minestar.mine.service.gis.GISDBDataMan
gisDBDataMan.description=GIS DB Mesh Data Archiver - Called by cleanExpiredFiles
gisDBDataMan.tags=admin
gisDBDataMan.group=Admin
#gisDBDataMan.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5013

purgeRecycleBin.filename=bus/pythonlib/purgeRecycleBin.py
purgeRecycleBin.description=Drop all schema objects from the given Data Store (eg. _MODELDB)
purgeRecycleBin.tags=admin,Oracle
purgeRecycleBin.group=Admin
purgeRecycleBin.argcheck=<DatabaseName>
purgeRecycleBin.argnames=DatabaseName
purgeRecycleBin.argDatabaseName_choices=choice:sysDbmsInstance
purgeRecycleBin.argDatabaseName_widget=checkbox

msReadGrantPermission.filename= {MSTAR_HOME}/bus/mstarrun/GrantPermissionToMsread.bat
msReadGrantPermission.description=Grant Read permission for MSRead Schema
msReadGrantPermission.argcheck=
msReadGrantPermission.tags=admin
msReadGrantPermission.group=Admin

dbHealthMonitor.filename= {MSTAR_HOME}/bus/mstarrun/DbHealthMonitor.bat
dbHealthMonitor.description=Monitor Oracle Database Health
dbHealthMonitor.argcheck=
dbHealthMonitor.tags=admin,Oracle
dbHealthMonitor.group=Admin

checkReportingDataStores.filename=minestar.platform.persistence.service.tools.CheckReportingDataStoresTool
checkReportingDataStores.description=checkDataStores for reporting data warehouse
checkReportingDataStores.tags=admin
checkReportingDataStores.group=Diagnostics

updateListenerPort.filename=bus/pythonlib/updateListenerPort.py
updateListenerPort.description=Updates the Listener Port
updateListenerPort.argcheck=
updateListenerPort.tags=admin
updateListenerPort.group=Admin

createDbAdmin.filename=minestar.platform.persistence.service.tools.CreateAdminUser
createDbAdmin.description=To create db admin user from supervisor
createDbAdmin.argcheck=
createDbAdmin.tags=admin
createDbAdmin.group=Admin

validateCycles.filename=minestar.platform.persistence.service.tools.CycleValidator
validateCycles.description=Validates cycles for a particular period
validateCycles.argcheck=
validateCycles.tags=admin
validateCycles.group=Admin
