<?xml version="1.0"?>
<!-- Copyright (c) 2021 Caterpillar -->

<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping default-access="field" default-lazy="false" schema="model">

    <class name="minestar.mine.persistence.minemodel.planning.PlanEntity"
           table="PLAN_MODEL"
           dynamic-update="true"
           abstract="true">

        <meta attribute="index">
            name=PLAN_NAME
            unique=true
            columns=NAME
            tablespace=MW_IDXENT
        </meta>

        <meta attribute="description">A plan.</meta>

        <cache usage="read-write" region="model"/>

        <id name="OID" type="long" column="PLAN_OID">
            <generator class="com.mincom.env.base.persistence.IDGenerator"/>
        </id>

        <discriminator column="DISCRIMINATOR_ID"/>

        <property name="version" type="int">
            <meta attribute="description">Current version of the Plan.</meta>
            <column name="VERSION" not-null="true" default="0"/>
        </property>

        <property name="layerUpdateVersion" type="long" column="LAYER_UPDATE_VERSION" not-null="true">
            <meta attribute="description">The layer update version when the plan was created/modified.</meta>
        </property>

        <property name="name"
                  type="string"
                  column="NAME"
                  not-null="true">
            <meta attribute="description">A user supplied identifier for this Plan.</meta>
        </property>

        <property name="manualLanes"
                  type="boolean"
                  column="MANUAL_LANES"
                  not-null="true">
            <meta attribute="defaultValue">false</meta>
            <meta attribute="description">Specifies if this plan has the lanes managed manually.</meta>
        </property>

        <property name="remainAutonomous" type="boolean">
            <meta attribute="defaultValue">false</meta>
            <meta attribute="description">Specifies if trucks in this plan to remain in autonomous mode.</meta>
            <column name="REMAIN_AUTONOMOUS" not-null="true" default="0"/>
        </property>

        <property name="availability"
                  type="minestar.domain.model.persistence.PlanAvailabilityUserType"
                  column="AVAILABILITY">
            <meta attribute="description">The current availability of the plan for maintenance/activity.</meta>
        </property>

        <property name="entryPoint"
                  type="StagingPoint">
            <meta attribute="description">The staging point for the entry position.</meta>
            <column name="ENTRY_X"/>
            <column name="ENTRY_Y"/>
            <column name="ENTRY_Z"/>
            <column name="ENTRY_HEADING"/>
            <column name="ENTRY_POSITION_TOL"/>
            <column name="ENTRY_HEADING_TOL"/>
            <column name="ENTRY_REF_POINT"/>
            <column name="ENTRY_ENTER_FWD"/>
            <column name="ENTRY_EXIT_FWD"/>
            <column name="ENTRY_EDITABLE"/>
            <column name="ENTRY_CUSP_PREFERENCE" />
        </property>

        <property name="exitPoint"
                  type="StagingPoint">
            <meta attribute="description">The staging point for the exit position.</meta>
            <column name="EXIT_X"/>
            <column name="EXIT_Y"/>
            <column name="EXIT_Z"/>
            <column name="EXIT_HEADING"/>
            <column name="EXIT_POSITION_TOL"/>
            <column name="EXIT_HEADING_TOL"/>
            <column name="EXIT_REF_POINT"/>
            <column name="EXIT_ENTER_FWD"/>
            <column name="EXIT_EXIT_FWD"/>
            <column name="EXIT_EDITABLE"/>
            <column name="EXIT_CUSP_PREFERENCE" />
        </property>

        <property name="queuePoint"
                  type="StagingPoint">
            <meta attribute="description">The staging point for the queue position.</meta>
            <column name="QUEUE_X"/>
            <column name="QUEUE_Y"/>
            <column name="QUEUE_Z"/>
            <column name="QUEUE_HEADING"/>
            <column name="QUEUE_POSITION_TOL"/>
            <column name="QUEUE_HEADING_TOL"/>
            <column name="QUEUE_REF_POINT"/>
            <column name="QUEUE_ENTER_FWD"/>
            <column name="QUEUE_EXIT_FWD"/>
            <column name="QUEUE_EDITABLE"/>
            <column name="QUEUE_CUSP_PREFERENCE" />
        </property>

        <property name="editable"
                  type="boolean">
            <meta attribute="defaultValue">true</meta>
            <meta attribute="description">Specifies if this plan is editable.</meta>
            <column name="EDITABLE" not-null="true" default="1"/>
        </property>


        <many-to-one name="serverScript"
                     class="minestar.mine.domain.minemodel.script.server.ServerScript"
                     column="SERVER_SCRIPT">
            <meta attribute="description">The script associated with this plan.</meta>
        </many-to-one>

        <many-to-one name="alternateServerScript"
                     class="minestar.mine.domain.minemodel.script.server.ServerScript"
                     column="ALT_SERVER_SCRIPT">
            <meta attribute="description">The alternate script associated with this plan.</meta>
        </many-to-one>

        <many-to-one name="automaticRecoveryScript"
                     class="minestar.mine.domain.minemodel.script.server.ServerScript"
                     column="AUTO_RECOVERY_SCRIPT">
            <meta attribute="description">The script that will be used to automatically attempt recovery if the truck fails to put its body down at a highwall dump.</meta>
        </many-to-one>

        <set name="machineClasses" table="PLAN_MACHINE_CLASSES" lazy="false" access="field">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="description">Machine classes included in the plan.</meta>
            <meta attribute="view-reference">minestar.pitlink.domain.machine.MachineClassImpl</meta>

            <key column="PLAN_OID" not-null="true"/>
            <many-to-many column="MACHINECLASS_OID" class="minestar.pitlink.domain.machine.MachineClassReference" lazy="false"/>
        </set>

        <list name="polygon"
              table="PLAN_POLYGON"
              batch-size="100">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>

            <meta attribute="index-alias">pointNr</meta>
            <meta attribute="description">The coordinates for the boundary of the plan area.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <index type="int"  column="POINT_NR"/>
            <element type="XYZCoordinate" not-null="true">
                <column name="X" not-null="true"/>
                <column name="Y" not-null="true"/>
                <column name="Z" not-null="true"/>
            </element>
        </list>

        <subclass name="minestar.mine.persistence.minemodel.planning.DynamicPlanEntity" abstract="true">
            <component
                name="advancedSettings"
                class="minestar.mine.domain.minemodel.planning.PlanAdvancedSettings">
                <!-- Set a blank alias, since a meaningful alias here makes the view column names very long. -->
                <meta attribute="alias"/>

                <property name="overrideDefaultThroughputSettings"
                          type="boolean">
                    <meta attribute="alias">overrideThroughput</meta>
                    <meta attribute="description">Specifies whether the supervisor configuration should be used for all throughput settings.</meta>
                    <column name="OVERRIDE_DEFAULT_THROUGHPUT" not-null="true" default="0"/>
                </property>

                <property name="allowStagingAtCusp"
                          type="boolean"
                          column="STAGE_AT_CUSP">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">stageAtCusp</meta>
                    <meta attribute="description">Specifies whether trucks should be allowed to stage at the cusp.</meta>
                </property>

                <property name="allowMultipleTrucksInArea"
                          type="boolean"
                          column="ALLOW_MULTIPLE_TRUCKS">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">multipleTrucks</meta>
                    <meta attribute="description">Specifies whether trucks should be allowed in the dynamic plan area at the same time.</meta>
                </property>

                <property name="maxAllowedTrucks"
                          type="int"
                          column="MAX_ALLOWED_TRUCKS">
                    <meta attribute="defaultValue">1</meta>
                    <meta attribute="alias">maxAllowedTrucks</meta>
                    <meta attribute="description">Specifies the limitation of trucks in dynamic area.</meta>
                </property>

                <property name="allowLimitTrucks"
                          type="boolean"
                          column="ALLOW_LIMIT_TRUCKS">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">allowLimitTrucks</meta>
                    <meta attribute="description">Specifies whether trucks should be limited when entering in dynamic area.</meta>
                </property>

                <property name="overrideDefaultPathPlanningSettings"
                          type="boolean">
                    <meta attribute="alias">overridePlanning</meta>
                    <meta attribute="description">Specifies whether the supervisor configuration should be used for all path planning settings.</meta>
                    <column name="OVERRIDE_DEFAULT_PLANNING" not-null="true" default="0"/>
                </property>

                <property name="laneSpeedLimit"
                          column="LANE_SPEED_LIMIT">
                    <meta attribute="alias">laneSpeedLimit</meta>
                    <meta attribute="description">The speed limit to use for generated lanes in this plan area.</meta>
                    <meta attribute="unitType">speed</meta>
                    <type name="quantity">
                        <param name="unitType">speed</param>
                    </type>
                </property>

                <property name="useCachedPlanState"
                          type="boolean"
                          column="INITIALISE_FROM_PREVIOUS_STATE">
                    <meta attribute="alias">useCached</meta>
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="description">Specifies whether previously saved plan state should be used when re-planning lanes.</meta>
                </property>

                <property name="deconflictionSetting"
                          type="int"
                          column="DECONFLICTION">
                    <meta attribute="alias">deconfliction</meta>
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="description">Specifies the deconfliction setting that should be used when planning lanes.</meta>
                </property>

                <property name="avoidQueueLane"
                          type="boolean"
                          column="AVOID_QUEUE_LANE">
                    <meta attribute="alias">avoidQueue</meta>
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="description">Specifies whether the Queue lane should be treated as an avoidance area when planning other lanes.</meta>
                </property>

                <property name="avoidExitLanes"
                          type="boolean"
                          column="AVOID_EXIT_LANES">
                    <meta attribute="alias">avoidExit</meta>
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="description">Specifies whether the Exit lanes should be treated as avoidance areas when planning other lanes.</meta>
                </property>

                <property name="planUTurnLane"
                          type="boolean"
                          column="PLAN_U_TURN_LANE">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">planUTurn</meta>
                    <meta attribute="description">Specifies whether a U-Turn lane should be planned for this area.</meta>
                </property>

                <property name="planAWTUTurnLane"
                          type="boolean"
                          column="PLAN_AWT_U_TURN_LANE">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">planAWTUTurn</meta>
                    <meta attribute="description">Specifies whether an Autonomous Water Truck specific U-Turn lane should be planned for this area.</meta>
                </property>

                <property name="compressGeneratedLanes"
                          type="boolean"
                          column="COMPRESS_LANES">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">compressLanes</meta>
                    <meta attribute="description">Specifies whether the generated lanes should be compressed automatically.</meta>
                </property>

                <!-- For Boundary_TYPE the default value should be the body which is 0. See BoundaryType.java -->
                <property name="boundaryTypeSetting"
                          type="int"
                          column="BOUNDARY_TYPE">
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">boundaryType</meta>
                    <meta attribute="description">Specifies whether the boundary of the area should be a wheel or body boundary.</meta>
                </property>

                <property name="wideningTypeSetting"
                          type="int"
                          column="WIDENING_TYPE">
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">wideningType</meta>
                    <meta attribute="description">Specifies the widening type for post widening lanes.</meta>
                </property>

                <property name="attemptCuspSplitting"
                          type="boolean"
                          column="ATTEMPT_CUSP_SPLITTING">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">cuspSplit</meta>
                    <meta attribute="description">Specifies whether an attempt should be made to split lanes for staging at the cusp.</meta>
                </property>

                <property name="returnLaneSplitting"
                          type="int"
                          column="RETURN_LANE_SPLITTING">
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">returnSplit</meta>
                    <meta attribute="description">Specifies the number of splits that should be introduced on the return lanes.</meta>
                </property>

                <property name="optimizeLanes"
                          type="boolean"
                          column="OPTIMIZE_LANES">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">optimizeLanes</meta>
                    <meta attribute="description">Specifies whether generic lanes splitting should be used.</meta>
                </property>

                <property name="forceStraightLaneJoins"
                          type="boolean"
                          column="FORCE_STRAIGHT_LANE_JOINS">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">straightenJoins</meta>
                    <meta attribute="description">Specifies whether the end of dynamically generated lanes should be straightened.</meta>
                </property>

                <property name="smoothWidthTransitions"
                          type="boolean"
                          column="SMOOTH_WIDTH_TRANSITIONS">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">smoothTransitions</meta>
                    <meta attribute="description">Specifies whether the transitions between different lane widths should be smoothed.</meta>
                </property>

                <property name="transitionRate"
                          column="TRANSITION_RATE">
                    <meta attribute="alias">transitionRate</meta>
                    <meta attribute="description">The preferred maximum transition rate for lane width smoothing.</meta>
                    <meta attribute="unitType">ratio</meta>
                    <type name="quantity">
                        <param name="unitType">ratio</param>
                    </type>
                </property>

                <property name="assignToExit"
                          type="boolean"
                          column="ASSIGN_TO_EXIT">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">assignToExit</meta>
                    <meta attribute="description">
                        Specifies whether the truck is assigned from the queue point through the service point to the exit point.
                    </meta>
                </property>

                <property name="taperSpottingLanes"
                          type="boolean"
                          column="TAPER_SPOTTING_LANES">
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">taperSpottingLanes</meta>
                    <meta attribute="description">Specifies whether the spotting lanes should be tapered to a narrower width at the spot point.</meta>
                </property>

                <property name="allowLaneToIntersectLoadPlanBoundary"
                          type="boolean"
                          column="ALLOW_BOUNDARY_INTERSECT">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">intersectLoadBoundary</meta>
                    <meta attribute="description">Specifies whether the spotting lanes in the load boundary should be able to extend into the load face.</meta>
                </property>

                <property name="paddockDumpBumpOptional"
                          type="boolean"
                          column="PADDOCK_BUMP_OPTIONAL">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">paddockDumpBumpOptional</meta>
                    <meta attribute="description">Specifies whether the paddock dump plan should be configured for bump-optional dumping.</meta>
                </property>

                <property name="throughputOptimisation"
                          type="int"
                          column="THROUGHPUT_OPTIMISATION">
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">throughputOptimisation</meta>
                    <meta attribute="description">Specifies the level of throughput optimisation to be used for dumps.</meta>
                </property>

                <property name="throughput"
                          type="int"
                         >
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">throughput</meta>
                    <meta attribute="description">Specifies the throughput setting to be used for dumps.</meta>
                    <column name="THROUGHPUT" default="0"/>
                </property>

                <property name="dumpOrderPriority"
                          type="int"
                         >
                    <meta attribute="alias">dumpOrderPriority</meta>
                    <meta attribute="description">Specifies the dump Order Priority setting to be used for highwall dumps when using Allocate By Score strategy.</meta>
                    <column name="DUMP_ORDER_PRIORITY"/>
                </property>

                <property name="enableAutomaticLaneSplitting"
                          type="boolean"
                         >
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">enableAutomaticLaneSplitting</meta>
                    <meta attribute="description">Enable automatic splitting of dump lanes.</meta>
                    <column name="ENABLE_AUTO_LANE_SPLITTING" default="1"/>
                </property>

                <property name="allowQueuingCloseToEndOfQueueLane"
                          type="boolean"
                         >
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">queueNearLaneEnd</meta>
                    <meta attribute="description">Allow truck to queue close to end of queue lane.</meta>
                    <column name="QUEUE_NEAR_LANE_END" default="0"/>
                </property>

                <property
                        name="outstandingTrucks"
                        type="int"
                        column="OUTSTANDING_TRUCKS">
                    <meta attribute="description">The number of trucks allowed to be en-route to a dump even when all dump points are occupied</meta>
                </property>

                <property name="cuspPreference"
                          type="int"
                         >
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">cuspPreference</meta>
                    <meta attribute="description">Define the preferred side for setting spot points on the plan</meta>
                    <column name="CUSP_PREFERENCE" default="0"/>
                </property>

                <property name="allowThreePointTurn"
                          type="boolean"
                         >
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">allowThreePointTurn</meta>
                    <meta attribute="description">Allow planner to produce a solution with a three-point turn.</meta>
                    <column name="ALLOW_THREE_POINT_TURN" default="0"/>
                </property>

                <property name="enableSmallAreaOptimizations"
                          type="boolean"
                         >
                    <meta attribute="defaultValue">true</meta>
                    <meta attribute="alias">smallAreaOptimization</meta>
                    <meta attribute="description">Optimize planner settings for very small planning areas.</meta>
                    <column name="SMALL_AREA_OPTIMIZATION" default="0"/>
                </property>

                <property name="enableNarrowAreaPlanning"
                          type="boolean"
                          not-null="true">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">narrowAreaPlanning</meta>
                    <meta attribute="description">Indicates this plan has a narrow area requiring special lane planning.</meta>
                    <column name="NARROW_AREA" not-null="true" default="0"/>
                </property>

                <property name="narrowAreaPlanningTypeSetting"
                          type="int"
                          column="NARROW_AREA_PLANNING_TYPE">
                    <meta attribute="defaultValue">0</meta>
                    <meta attribute="alias">narrowAreaPlanningType</meta>
                    <meta attribute="description">Specifies the narrow area planning type.</meta>
                </property>

                <property name="enableCableBridgeFallbackPlanning"
                          type="boolean"
                          not-null="true">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">cableBridgeFallbackPlanning</meta>
                    <meta attribute="description">Indicates this plan is configured to reattempt planning for cable bridge associated plans.</meta>
                    <column name="CABLE_BRIDGE_FALLBACK" not-null="true" default="0"/>
                </property>

                <property name="avoidCuspingIntoBoundary"
                          type="boolean">
                    <meta attribute="defaultValue">false</meta>
                    <meta attribute="alias">cuspingIntoBoundary</meta>
                    <meta attribute="description">Indicates this plan is configured to avoid cusping into boundary.</meta>
                    <column name="AVOID_CUSPING_INTO_BOUNDARY" default="0"/>
                </property>
            </component>

            <property name="displayColorRGB"
                      column="DISPLAY_COLOR"
                      type="int">
                <meta attribute="description">The RGB display color for the plan.</meta>
            </property>

            <many-to-one name="associatedZone"
                         class="minestar.mine.domain.minemodel.ZoneReference"
                         column="ASSOCIATED_ZONE">
                <meta attribute="description">A zone used for display of the plan boundary in on-board systems.</meta>
                <meta attribute="foreign-key">
                    on-delete=SET_NULL
                </meta>
            </many-to-one>

            <subclass name="minestar.mine.persistence.minemodel.planning.LoadPlanEntity" discriminator-value="LoadPlanImpl">
                <meta attribute="description">
                    A load plan for a loading tool.
                </meta>

                <set name="loadingTools">
                    <!-- Stored in the MACHINE table due to the one-to-many relationship -->

                    <meta attribute="collection-table">
                        tablespace=MW_ENT
                    </meta>
                    <meta attribute="collection-primary-key">
                        tablespace=MW_IDXENT
                    </meta>
                    <meta attribute="view-reference">minestar.pitlink.domain.machine.MachineImpl</meta>

                    <cache usage="read-write" region="model"/>

                    <key column="LOAD_PLAN_OID"/>
                    <one-to-many class="minestar.pitlink.domain.machine.MachineReference"/>
                </set>

                <property name="type"
                          type="minestar.mine.domain.minemodel.planning.LoadPlanTypeEnumUserType"
                          column="LOAD_PLAN_TYPE">
                    <meta attribute="description">
                        The type of the load plan.
                    </meta>
                </property>

            </subclass>

            <subclass name="minestar.mine.persistence.minemodel.planning.DumpPlanEntity" discriminator-value="DumpPlanImpl">
                <meta attribute="description">
                    A dump plan for a processor.
                </meta>

                <many-to-one name="processor"
                             class="minestar.pitlink.domain.machine.MachineReference"
                             column="PROCESSOR"
                             lazy="false">
                    <meta attribute="description">The processor for this dump plan.</meta>
                </many-to-one>

                <property name="type"
                          type="minestar.domain.model.persistence.DumpPlanTypeEnumUserType"
                          column="DUMP_PLAN_TYPE">
                    <meta attribute="defaultValue">'STATIONARY'</meta>
                    <meta attribute="description">
                        The type of the dump plan.
                    </meta>
                </property>

            </subclass>

        </subclass>

        <subclass name="minestar.mine.persistence.minemodel.planning.StationPlanEntity" discriminator-value="StationPlanImpl">
            <meta attribute="description">
                A plan for a station.
            </meta>

            <many-to-one name="atQueueScript"
                         class="minestar.mine.domain.minemodel.script.Script"
                         column="AT_QUEUE_SCRIPT">
                <meta attribute="description">The script to execute when the truck arrives at the queue point.</meta>
            </many-to-one>

            <many-to-one name="atPointScript"
                         class="minestar.mine.domain.minemodel.script.Script"
                         column="AT_POINT_SCRIPT">
                <meta attribute="description">The script to execute when the truck arrives at any of the station points.</meta>
            </many-to-one>

            <subclass name="minestar.mine.persistence.minemodel.planning.FuelBayPlanEntity" discriminator-value="FuelBayPlanImpl">
                <meta attribute="description">
                    A plan for a fuel bay, which is a machine at a station location.
                </meta>
                <many-to-one name="station"
                             class="minestar.pitlink.domain.machine.MachineReference"
                             column="FUEL_BAY"
                             lazy="false">
                    <meta attribute="description">The fuel bay that this plan is for.</meta>
                </many-to-one>
            </subclass>

            <subclass name="minestar.mine.persistence.minemodel.planning.WaterRefillStationPlanEntity" discriminator-value="WaterRefillStationPlanImpl">
                <meta attribute="description">
                    A plan for a water refill station, which is a machine at a station location.
                </meta>
                <many-to-one name="station"
                             class="minestar.pitlink.domain.machine.MachineReference"
                             column="WATER_REFILL_STATION"
                             lazy="false">
                    <meta attribute="description">The water refill station that this plan is for.</meta>
                </many-to-one>
            </subclass>

            <subclass name="minestar.mine.persistence.minemodel.planning.PayloadServicePlanEntity" discriminator-value="PayloadServicePlanImpl">
                <meta attribute="description">
                    A plan for a Payload Service , which is a machine at a station location.
                </meta>
                <many-to-one name="station"
                             class="minestar.pitlink.domain.machine.MachineReference"
                             column="PAYLOAD_SERVICE"
                             lazy="false">
                    <meta attribute="description">The Payload Service that this plan is for.</meta>
                </many-to-one>
            </subclass>

            <subclass name="minestar.mine.persistence.minemodel.planning.WorkshopPlanEntity" discriminator-value="WorkshopPlanImpl">
                <meta attribute="description">
                    A plan for a workshop, which is basically a station location.
                </meta>
                <many-to-one name="station"
                             class="minestar.mine.domain.minemodel.LocationReference"
                             column="WORKSHOP">
                    <meta attribute="description">The location representing the workshop.</meta>
                </many-to-one>
            </subclass>

            <subclass name="minestar.mine.persistence.minemodel.planning.LayoverStationPlanEntity" discriminator-value="LayoverStationPlanImpl">
                <meta attribute="description">
                    A plan for a layover.
                </meta>
                <many-to-one name="station"
                             class="minestar.pitlink.domain.machine.MachineReference"
                             column="LAYOVER_STATION">
                    <meta attribute="description">The Layover representing the layover.</meta>
                </many-to-one>
            </subclass>

        </subclass>

    </class>

    <class name="minestar.mine.persistence.minemodel.planning.SpotPointEntity"
           table="SPOT_POINT"
           dynamic-update="true"
           abstract="true">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="description">Information about each plan spot point.</meta>

        <cache usage="read-write" region="model"/>

        <id name="OID" type="long" column="SPOT_POINT_OID">
            <generator class="com.mincom.env.base.persistence.IDGenerator"/>
        </id>

        <discriminator column="DISCRIMINATOR_ID"/>

        <many-to-one name="planRef"
                     class="minestar.mine.domain.minemodel.planning.PlanReference"
                     column="PLAN_OID"
                     not-null="true"
                     index="SPOT_POINT_PLAN_IX">
            <meta attribute="description">The plan to which this point is attached.</meta>
<!--            <meta attribute="foreign-key">-->
<!--                on-delete=CASCADE-->
<!--            </meta>-->
        </many-to-one>

        <many-to-one name="planGroupRef"
                     class="minestar.mine.domain.minemodel.planning.PlanGroupReference"
                     column="PLAN_GROUP_OID"
                     index="SPOT_POINT_PLAN_GROUP_IX">
            <meta attribute="description">The (dump) plan-group to which this point is attached.</meta>
<!--            <meta attribute="foreign-key">-->
<!--                on-delete=CASCADE-->
<!--            </meta>-->
        </many-to-one>

        <property name="pointNr" type="int" column="POINT_NR" not-null="true">
            <meta attribute="description">An index used to order the plan-point within the parent plan/group.</meta>
        </property>

        <property name="cuspBoundary" type="CuspBoundary">
            <meta attribute="description">The "CuspBoundary" for the spot position. The the area where the path planner will attempt to place the cusp for the spot point.</meta>
            <column name="CUSPBOUNDARY_X"/>
            <column name="CUSPBOUNDARY_Y"/>
            <column name="CUSPBOUNDARY_Z"/>
            <column name="CUSPBOUNDARY_RADIUS"/>
        </property>

        <property name="designedStagingPoint"
                  type="StagingPoint">
            <meta attribute="description">The "designed" staging point for the spot position.</meta>
            <column name="X" not-null="true"/>
            <column name="Y" not-null="true"/>
            <column name="Z" not-null="true"/>
            <column name="HEADING"/>
            <column name="POSITION_TOL"/>
            <column name="HEADING_TOL"/>
            <column name="REF_POINT"/>
            <column name="ENTER_FWD"/>
            <column name="EXIT_FWD"/>
            <column name="EDITABLE"/>
            <column name="CUSP_PREFERENCE" />
        </property>

        <property name="adjustedStagingPoint"
                  type="StagingPoint">
            <meta attribute="description">The "adjusted" staging point for the spot position.  This should fit within tolerances of the "designed" staging point.</meta>
            <column name="ADJUSTED_X"/>
            <column name="ADJUSTED_Y"/>
            <column name="ADJUSTED_Z"/>
            <column name="ADJUSTED_HEADING"/>
            <column name="ADJUSTED_POSITION_TOL"/>
            <column name="ADJUSTED_HEADING_TOL"/>
            <column name="ADJUSTED_REF_POINT"/>
            <column name="ADJUSTED_ENTER_FWD"/>
            <column name="ADJUSTED_EXIT_FWD"/>
            <column name="ADJUSTED_EDITABLE"/>
            <column name="ADJUSTED_CUSP_PREFERENCE" />
        </property>

        <many-to-one name="associatedZone"
                     class="minestar.mine.domain.minemodel.ZoneReference"
                     column="ASSOCIATED_ZONE">
            <meta attribute="description">The zone associated with this loading point</meta>
            <meta attribute="foreign-key">
                on-delete=SET_NULL
            </meta>
        </many-to-one>

        <subclass name="minestar.mine.persistence.minemodel.planning.LoadSpotPointEntity" discriminator-value="LoadSpotPointImpl">
            <meta attribute="description">
                Information about each loading point.
            </meta>
            <property name="caesId"
                      type="int"
                      column="CAES_ID">
                <meta attribute="description">The identifier used to identify this spotting point by CAES</meta>
            </property>
        </subclass>

        <subclass name="minestar.mine.persistence.minemodel.planning.DumpSpotPointEntity" discriminator-value="DumpingPointImpl">
            <meta attribute="description">
                Information about each dumping point.
            </meta>

            <property name="layerUpdateVersion"
                      type="long">
                <meta attribute="description">The layer update version when the point was created/modified.</meta>
                <column name="LAYER_UPDATE_VERSION" not-null="true" default="0"/>
            </property>

            <property name="status"
                      type="minestar.domain.model.persistence.DumpPointStatusEnumUserType"
                      column="DUMP_POINT_STATUS">
                <meta attribute="defaultValue">'FREE'</meta>
                <meta attribute="description">
                    The status of the dump point, either FREE, ALLOCATED, or DUMPED.
                </meta>
            </property>

            <property name="dumpWidth"
                      column="DUMP_WIDTH">
                <meta attribute="description">The width of the dump area for one truck.</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="dumpLength"
                      column="DUMP_LENGTH">
                <meta attribute="description">The length of the dump area for one truck.</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="spillOffset"
                      column="SPILL_OFFSET">
                <meta attribute="description">The distance forward the load spills when dumping.</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="maxDumpCount"
                      type="int"
                      column="MAX_DUMP_COUNT">
                <meta attribute="defaultValue">1</meta>
                <meta attribute="alias">maxDumpCount</meta>
                <meta attribute="description">
                    The maximum number of times this dump point can be used before being considered full.
                </meta>
            </property>

            <property name="dumpCount"
                      type="int"
                      column="DUMP_COUNT">
                <meta attribute="defaultValue">0</meta>
                <meta attribute="alias">dumpCount</meta>
                <meta attribute="description">
                    The number of times this dump point has been dumped at.
                </meta>
            </property>

            <property name="verified" type="boolean">
                <meta attribute="description">Specifies if the dump point has been verified</meta>
                <column name="VERIFIED" default="0"/>
            </property>

            <many-to-one name="materialMixReference"
                         class="minestar.machinetracking.domain.MaterialMixReference"
                         column="MATERIAL_MIX"
                         not-null="false"
                         lazy="false">
                <meta attribute="description">The MaterialMix for this dump point.</meta>
                <meta attribute="foreign-key">
                    on-delete=NO_ACTION
                </meta>
            </many-to-one>

        </subclass>

        <subclass name="minestar.mine.persistence.minemodel.planning.StationSpotPointEntity" discriminator-value="StationPointImpl">
            <meta attribute="description">
                Information about each station point.
            </meta>
            <property name="name"
                      type="string"
                      column="STATION_POINT_NAME">
                <meta attribute="description">The name used to identify this station point.</meta>
            </property>
        </subclass>

    </class>

    <class name="minestar.mine.domain.minemodel.planning.PlanLaneInformation"
           table="PLAN_LANE_INFO"
           dynamic-update="true">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="foreign-key">
            name=PLAN_LANE_INFO_PLAN_OID_FK
            columns=PLAN_OID
            referenced-table=PLAN_MODEL
            referenced-columns=PLAN_OID
            on-delete=CASCADE
        </meta>
        <meta attribute="foreign-key">
            on-delete=CASCADE
        </meta>

        <meta attribute="description">Lane information for a plan.</meta>

        <cache usage="read-write" region="model"/>

        <id name="planOID"
            type="long"
            column="PLAN_OID">

            <generator class="assigned"/>
        </id>

        <list name="entryLanes"
              table="PLAN_LANE_INFO_ENTRY">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>

            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The ordered entry lanes for a plan.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <set name="entryLaneErrors"
             table="PLAN_LANE_INFO_ENTRY_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating entry lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <list name="exitLanes"
              table="PLAN_LANE_INFO_EXIT">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The Lanes used by this plan as exit lanes.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <set name="exitLaneErrors"
             table="PLAN_LANE_INFO_EXIT_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating exit lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <list name="uturnLanes"
              table="PLAN_LANE_INFO_UTURN">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The Lanes used by this plan as u-turn lanes.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <set name="uturnLaneErrors"
             table="PLAN_LANE_INFO_UTURN_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating u-turn lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <set name="queueLanes"
             table="PLAN_LANE_INFO_QUEUE"
             order-by="PLAN_OID, GROUP_NR, LANE_NR" >

            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="index">
                name=PLAN_LANE_INFO_QUEUE_UIDX1
                unique=true
                columns=PLAN_OID,GROUP_NR,LANE_NR
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>

            <meta attribute="description">The Lanes used by this plan as queueing lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <composite-element class="minestar.mine.domain.minemodel.planning.GroupedPlanLane">
                <property name="groupNr" type="int">
                    <column name="GROUP_NR" not-null="true" default="0">
                        <comment>Index of a queue lane group</comment>
                    </column>
                </property>
                <property name="laneNr" type="int">
                    <column name="LANE_NR"  not-null="true">
                        <comment>Index of a lane within a queue lane group</comment>
                    </column>
                </property>
                <many-to-one name="laneReference" class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID" not-null="true"/>
            </composite-element>
        </set>

        <set name="queueLaneErrors"
             table="PLAN_LANE_INFO_QUEUE_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating queue lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <set name="deadLanes"
             table="PLAN_LANE_INFO_DEAD">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">
                The Lanes previously used by this plan and can not be removed as they were being used.
            </meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </set>

        <set name="inboundAccessLanes"
             table="PLAN_LANE_INFO_INBOUND_ACCESS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">
                The Lanes that connect this plan's entry lanes to the mine's haulage lanes.
            </meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </set>

        <set name="outboundAccessLanes"
             table="PLAN_LANE_INFO_OUTBOUND_ACCESS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">
                The Lanes that connect this plan's exit lanes to the mine's haulage lanes.
            </meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </set>

        <list name="awtWateringLanes"
              table="PLAN_LANE_INFO_AWT_WATERING">
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">
                The lanes that allow an AWT to water the dynamic area
            </meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <list name="awtUturnLanes"
              table="PLAN_LANE_INFO_AWT_UTURN">
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">
                The lanes that allow an AWT to perform a u-turn
            </meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <set name="spotPointLaneInfos"
             cascade="all-delete-orphan">
            <!-- Stored as PLAN_OID in the SPOT_POINT_LANE_INFO table due to the one-to-many relationship -->

            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Lane information for plan spotting points.</meta>
            <meta attribute="view-include">false</meta>
            <meta attribute="view-ignore">true</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <one-to-many class="minestar.mine.domain.minemodel.SpotPointLaneInfo"/>
        </set>

        <set name="planGroupLaneInfos"
             cascade="all-delete-orphan">
            <!-- Stored as PLAN_OID in the PLAN_GROUP_LANE_INFO table due to the one-to-many relationship -->

            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">A list of all groups for this plan.</meta>
            <meta attribute="view-include">false</meta>
            <meta attribute="view-ignore">true</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <one-to-many class="minestar.mine.domain.minemodel.planning.PlanGroupLaneInfo"/>
        </set>

        <set name="groupedPlanSpotPoints"
             table="PLAN_LANE_INFO_GROUPED_SPOTS"
             order-by="PLAN_OID, GROUP_NR, SPOT_POINT_OID" >

            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="index">
                name=PLAN_LANE_INFO_GRPD_SPTS_UIDX1
                unique=true
                columns=PLAN_OID,GROUP_NR,SPOT_POINT_OID
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                name=PLAN_LANE_INFO_GRPD_SPTS_FK1
                columns=SPOT_POINT_OID
                referenced-table=SPOT_POINT
                referenced-columns=SPOT_POINT_OID
                on-delete=CASCADE
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>

            <meta attribute="description">The groups containing spot points in this plan.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_OID" not-null="true"/>
            <composite-element class="minestar.mine.domain.minemodel.planning.GroupedSpotPoint">
                <property name="groupNr" type="int">
                    <column name="GROUP_NR" not-null="true" default="0">
                        <comment>Index of a queue lane group</comment>
                    </column>
                </property>
                <property name="spotPointOID" type="long" column="SPOT_POINT_OID" not-null="true"/>
            </composite-element>
        </set>

    </class>

    <class name="minestar.mine.domain.minemodel.SpotPointLaneInfo"
           table="SPOT_POINT_LANE_INFO">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="index">
            name=SPOT_POINT_LANE_INFO_PLAN_OID
            columns=PLAN_OID
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="foreign-key">
            name=SPOT_POINT_LANE_INFO_SP_OID_FK
            columns=SPOT_POINT_OID
            referenced-table=SPOT_POINT
            referenced-columns=SPOT_POINT_OID
            on-delete=CASCADE
        </meta>
        <meta attribute="foreign-key">
            on-delete=CASCADE
        </meta>
        <meta attribute="description">Lane information for each plan spot point.</meta>
        <meta attribute="view-include">false</meta>
        <meta attribute="view-ignore">true</meta>

        <cache usage="read-write" region="model"/>

        <id name="spotPointOID"
            type="long"
            column="SPOT_POINT_OID">

            <generator class="assigned"/>
        </id>

        <list name="entryLanes"
              table="SPOT_POINT_ENTRY_LANES">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The Lanes used by this plan as entry lanes.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <list name="exitLanes"
              table="SPOT_POINT_EXIT_LANES">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The Lanes used by this plan as exit lanes.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <set name="entryLaneErrors"
             table="SPOT_POINT_ENTRY_LANE_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating entry lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <set name="exitLaneErrors"
             table="SPOT_POINT_EXIT_LANE_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating exit lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>
    </class>

    <class name="minestar.mine.domain.minemodel.SpotPointLaneDataImpl"
           table="SPOT_POINT_LANE_DATA"
           proxy="minestar.mine.domain.minemodel.SpotPointLaneData">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="description">Information that may be used to construct lanes for a spot point.</meta>
        <meta attribute="view-include">false</meta>
        <meta attribute="view-ignore">true</meta>

        <cache usage="read-write" region="model"/>

        <id name="OID" type="long" column="SPOT_POINT_OID">
            <!-- Assigned from PlanSpotPoint.OID -->
            <!-- Note that there is no database/hibernate link between a PlanSpotPoint and SpotPointLaneData.
                 It is therefore necessary to manually delete SpotPointLaneData when it's corresponding PlanSpotPoint
                 is deleted.  See usages of {@link SpotPointLaneDataPersistenceStore#deleteSpotPointLaneData()} -->
            <generator class="assigned"/>
        </id>

        <list name="entryPoints"
              table="SPOT_POINT_ENTRY_POINTS"
              cascade="all-delete-orphan">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="index-alias">lanePointNr</meta>
            <meta attribute="description">A list of all entry lane points for a spot point.</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <index type="int" column="LANE_POINT_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LanePointsImpl" column="PLAN_LANE_POINTS_OID"/>
        </list>

        <list name="exitPoints"
              table="SPOT_POINT_EXIT_POINTS"
              cascade="all-delete-orphan">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="index-alias">lanePointNr</meta>
            <meta attribute="description">A list of all exit lane points for a spot point.</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <index type="int" column="LANE_POINT_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LanePointsImpl" column="PLAN_LANE_POINTS_OID"/>
        </list>

        <set name="entryPointErrors"
             table="SPOT_POINT_ENTRY_POINT_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="description">Errors found when generating entry lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <set name="exitPointErrors"
             table="SPOT_POINT_EXIT_POINT_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="description">Errors found when generating exit lanes.</meta>

            <cache usage="read-write" region="model"/>

            <key column="SPOT_POINT_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>
    </class>

    <class name="minestar.mine.domain.minemodel.planning.PlanGroupLaneInfo"
           table="PLAN_GROUP_LANE_INFO">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="foreign-key">
            name=PLAN_GROUP_LANE_INFO_PG_OID_FK
            columns=PLAN_GROUP_OID
            referenced-table=PLAN_GROUP
            referenced-columns=PLAN_GROUP_OID
            on-delete=CASCADE
        </meta>
        <meta attribute="foreign-key">
            on-delete=CASCADE
        </meta>
        <meta attribute="description">Lane info for a plan group of a plan.</meta>
        <meta attribute="view-include">false</meta>
        <meta attribute="view-ignore">true</meta>

        <cache usage="read-write" region="model"/>

        <id name="planGroupOID"
            type="long"
            column="PLAN_GROUP_OID">

            <generator class="assigned"/>
        </id>

        <list name="entryLanes"
              table="PLAN_GROUP_ENTRY_LANES">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The ordered entry lanes for a dump group.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_GROUP_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <list name="exitLanes"
              table="PLAN_GROUP_EXIT_LANES">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="index-alias">laneNr</meta>
            <meta attribute="description">The ordered entry lanes for a dump group.</meta>
            <meta attribute="view-reference">minestar.mine.domain.minemodel.LaneImpl</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_GROUP_OID" not-null="true"/>
            <index type="int" column="LANE_NR"/>
            <many-to-many class="minestar.mine.domain.minemodel.LaneReference" column="LANE_OID"/>
        </list>

        <set name="entryLaneErrors"
             table="PLAN_GROUP_ENTRY_LANE_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating entry lanes of a dump group.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_GROUP_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>

        <set name="exitLaneErrors"
             table="PLAN_GROUP_EXIT_LANE_ERRORS">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>
            <meta attribute="description">Errors found when generating exit lanes of a dump group.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_GROUP_OID" not-null="true"/>
            <element column="PLANNING_STATUS" type="minestar.mine.domain.minemodel.LanePlanningStatusEnumUserType" not-null="true"/>
        </set>
    </class>

    <class name="minestar.mine.persistence.minemodel.planning.PlanGroupEntity"
           table="PLAN_GROUP"
           dynamic-update="true"
           abstract="true">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="description">A dump group for a dump plan.</meta>
        <meta attribute="view-include">false</meta>
        <meta attribute="view-ignore">true</meta>

        <cache usage="read-write" region="model"/>

        <id name="OID" type="long" column="PLAN_GROUP_OID">
            <generator class="com.mincom.env.base.persistence.IDGenerator"/>
        </id>

        <discriminator>
            <column name="DISCRIMINATOR_ID" not-null="true" default="DumpGroupImpl"/>
        </discriminator>

        <many-to-one name="planRef"
                     class="minestar.mine.domain.minemodel.planning.PlanReference"
                     column="PLAN_OID"
                     not-null="true"
                     index="PLAN_GROUP_PLAN_IX">
            <meta attribute="description">The plan to which this point is attached.</meta>
<!--            <meta attribute="foreign-key">-->
<!--                on-delete=CASCADE-->
<!--            </meta>-->
        </many-to-one>

        <property name="groupNr" type="int" column="GROUP_NR" not-null="true">
            <meta attribute="description">An index used to order the group within the plan.</meta>
        </property>

        <property name="availability"
                  type="minestar.domain.model.persistence.PlanAvailabilityUserType"
                  column="AVAILABILITY">
            <meta attribute="description">The current availability of the group for maintenance/activity.</meta>
        </property>

        <property name="entryStagingPoint"
                  type="StagingPoint">
            <meta attribute="description">The staging point for the entry position.</meta>
            <column name="ENTRY_X"/>
            <column name="ENTRY_Y"/>
            <column name="ENTRY_Z"/>
            <column name="ENTRY_HEADING"/>
            <column name="ENTRY_POSITION_TOL"/>
            <column name="ENTRY_HEADING_TOL"/>
            <column name="ENTRY_REF_POINT"/>
            <column name="ENTRY_ENTER_FWD"/>
            <column name="ENTRY_EXIT_FWD"/>
            <column name="ENTRY_EDITABLE"/>
            <column name="ENTRY_CUSP_PREFERENCE" />
        </property>

        <property name="exitStagingPoint"
                  type="StagingPoint">
            <meta attribute="description">The staging point for the exit position.</meta>
            <column name="EXIT_X"/>
            <column name="EXIT_Y"/>
            <column name="EXIT_Z"/>
            <column name="EXIT_HEADING"/>
            <column name="EXIT_POSITION_TOL"/>
            <column name="EXIT_HEADING_TOL"/>
            <column name="EXIT_REF_POINT"/>
            <column name="EXIT_ENTER_FWD"/>
            <column name="EXIT_EXIT_FWD"/>
            <column name="EXIT_EDITABLE"/>
            <column name="EXIT_CUSP_PREFERENCE" />
        </property>

        <list name="planArea"
              table="PLAN_GROUP_PLAN_AREA"
              batch-size="100">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="foreign-key">
                on-delete=CASCADE
            </meta>

            <meta attribute="index-alias">pointNr</meta>
            <meta attribute="description">The coordinates for the planning area of the dump group.</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_GROUP_OID" not-null="true"/>
            <index type="int"  column="POINT_NR"/>
            <element type="XYZCoordinate" not-null="true">
                <column name="X" not-null="true"/>
                <column name="Y" not-null="true"/>
                <column name="Z" not-null="true"/>
            </element>
        </list>

        <subclass name="minestar.mine.persistence.minemodel.planning.DumpPlanGroupEntity" discriminator-value="DumpGroupImpl">
            <meta attribute="description">
                A group of dumping points.
            </meta>

            <property name="highwallStartPoint" type="XYZCoordinate">
                <meta attribute="description">
                    The xyz coordinate for the starting point on the dump boundary that is the dumping line for this group.
                </meta>
                <column name="START_BOUNDARY_X"/>
                <column name="START_BOUNDARY_Y"/>
                <column name="START_BOUNDARY_Z"/>
            </property>

            <property name="highwallEndPoint" type="XYZCoordinate">
                <meta attribute="description">
                    The xyz coordinate for the ending point on the dump boundary that is the dumping line for this group.
                </meta>
                <column name="END_BOUNDARY_X"/>
                <column name="END_BOUNDARY_Y"/>
                <column name="END_BOUNDARY_Z"/>
            </property>

            <property name="highwallDumpPointsClockwise" type="boolean">
                <meta attribute="description">Specifies whether the order of highwall dump points is clockwise.</meta>
                <column name="IS_HIGHWALL_CLOCKWISE" not-null="true" default="0"/>
            </property>

            <property name="minPointSeparation" column="MIN_POINT_SEPARATION">
                <meta attribute="alias">pointSeparation</meta>
                <meta attribute="description">The minimum distance any two dump points can be apart.</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="startDistance" column="START_DISTANCE">
                <meta attribute="description">The distance from the start of a toeline to the first dump point position</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="betweenDistance" column="BETWEEN_DISTANCE">
                <meta attribute="description">The distance between two adjacent dump points</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="concaveDistance" column="CONCAVE_DISTANCE">
                <meta attribute="description">
                    The maximum distance of any point on the line between the start and end of the segment that lies on
                    the other side of the segment</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <property name="convexDistance" column="CONVEX_DISTANCE">
                <meta attribute="description">
                    The maximum distance of any point on the line between the start and end of the segment that lies on
                    the highwall side of the segment</meta>
                <meta attribute="unitType">length</meta>
                <type name="quantity">
                    <param name="unitType">length</param>
                </type>
            </property>

            <many-to-one name="cleanupZone"
                         class="minestar.mine.domain.minemodel.ZoneReference"
                         column="CLEANUP_ZONE">
                <meta attribute="description">A zone used for clean up of this dump groups points.</meta>
                <meta attribute="foreign-key">
                    on-delete=SET_NULL
                </meta>
            </many-to-one>
        </subclass>

    </class>

    <class name="minestar.mine.domain.minemodel.LanePointsImpl"
           table="PLAN_LANE_POINTS">

        <meta attribute="table">
            tablespace=MW_ENT
        </meta>
        <meta attribute="primary-key">
            tablespace=MW_IDXENT
        </meta>
        <meta attribute="description">Information necessary to make a lane.</meta>

        <cache usage="read-write" region="model"/>

        <id name="OID" type="long" column="PLAN_LANE_POINTS_OID">
            <generator class="com.mincom.env.base.persistence.IDGenerator"/>
        </id>

        <list name="leftPoints"
              table="PLAN_LANE_POINTS_LEFT">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="description">List of potential lane left edge points</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_LANE_POINTS_OID" not-null="true"/>
            <list-index column="POINT_NR"/>
            <element type="minestar.platform.persistence.HibernateXYZCoordinateType" not-null="true">
                <column name="X" not-null="true"/>
                <column name="Y" not-null="true"/>
                <column name="Z" not-null="true"/>
            </element>
        </list>

        <list name="rightPoints"
              table="PLAN_LANE_POINTS_RIGHT">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="description">List of potential lane right edge points</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_LANE_POINTS_OID" not-null="true"/>
            <list-index column="POINT_NR"/>
            <element type="minestar.platform.persistence.HibernateXYZCoordinateType" not-null="true">
                <column name="X" not-null="true"/>
                <column name="Y" not-null="true"/>
                <column name="Z" not-null="true"/>
            </element>
        </list>

        <list name="preferredPathPoints"
              table="PLAN_LANE_POINTS_PATH">
            <meta attribute="collection-table">
                tablespace=MW_ENT
            </meta>
            <meta attribute="collection-primary-key">
                tablespace=MW_IDXENT
            </meta>
            <meta attribute="description">List of potential lane path points</meta>

            <cache usage="read-write" region="model"/>

            <key column="PLAN_LANE_POINTS_OID" not-null="true"/>
            <list-index column="POINT_NR"/>
            <element type="minestar.platform.persistence.HibernateXYZCoordinateType" not-null="true">
                <column name="X" not-null="true"/>
                <column name="Y" not-null="true"/>
                <column name="Z" not-null="true"/>
            </element>
        </list>

        <property name="forward"
                  type="boolean"
                  column="LANE_POINTS_FWD"
                  not-null="true">
            <meta attribute="defaultValue">true</meta>
            <meta attribute="description">Specifies if normal traversal is forward.</meta>
        </property>

        <property name="overhangLaneStart"
                  type="boolean"
                  column="OVERHANG_LANE_START"
                  not-null="true">
            <meta attribute="defaultValue">false</meta>
            <meta attribute="description">Is the vehicle's body allowed to overhang the start of the lane?</meta>
        </property>

        <property name="overhangLaneEnd"
                  type="boolean"
                  column="OVERHANG_LANE_END"
                  not-null="true">
            <meta attribute="defaultValue">false</meta>
            <meta attribute="description">Is the vehicle's body allowed to overhang the end of the lane?</meta>
        </property>

        <property name="useMaxCurvature"
                  type="boolean"
                  column="USE_MAX_CURVATURE"
                  not-null="true">
            <meta attribute="defaultValue">false</meta>
            <meta attribute="description">The lanes can be traversed using a maximum curvature turn</meta>
        </property>

        <property name="refPoint"
                  type="StagingPoint">
            <meta attribute="description">An optional reference staging point for the lane.</meta>
            <column name="REFPOINT_X"/>
            <column name="REFPOINT_Y"/>
            <column name="REFPOINT_Z"/>
            <column name="REFPOINT_HEADING"/>
            <column name="REFPOINT_POSITION_TOL"/>
            <column name="REFPOINT_HEADING_TOL"/>
            <column name="REFPOINT_REF_POINT"/>
            <column name="REFPOINT_ENTER_FWD"/>
            <column name="REFPOINT_EXIT_FWD"/>
            <column name="REFPOINT_EDITABLE"/>
            <column name="REFPOINT_CUSP_PREFERENCE" />
        </property>

    </class>

    <!-- ****************************************************************************** -->
    <!-- PlanReference -->
    <!-- ****************************************************************************** -->
    <class name="minestar.mine.domain.minemodel.planning.PlanReference"
           table="PLAN_MODEL"
           mutable="false"
           lazy="false">

        <meta attribute="alias" inherit="false">PLAN_REFERENCE</meta>
        <meta attribute="description">A minimal reference to a Plan</meta>
        <meta attribute="view-create-order">1</meta>

        <cache usage="read-only" region="model"/>

        <id name="OID" type="long" column="PLAN_OID"/>
        <property name="name" type="string" column="NAME" not-null="true"/>
    </class>

    <!-- ****************************************************************************** -->
    <!-- PlanGroupReference -->
    <!-- ****************************************************************************** -->
    <class name="minestar.mine.domain.minemodel.planning.PlanGroupReference"
           table="PLAN_GROUP"
           mutable="false"
           lazy="false">

        <meta attribute="alias" inherit="false">PLAN_GROUP_REFERENCE</meta>
        <meta attribute="description">A minimal reference to a PlanGroup</meta>
        <meta attribute="view-create-order">1</meta>

        <cache usage="read-only" region="model"/>

        <id name="OID" type="long" column="PLAN_GROUP_OID"/>
    </class>

</hibernate-mapping>
