<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2020 Caterpillar -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Setup the spring configuration - Make this the first context file to be loaded -->

    <!--
        Properties can be defined/overridden with the following sources:
        * -D system properties fed to the command line
        * system.properties file on the classpath typically in jetty_home/resources
        * override.system.properties file optionally on the classpath
        * Check for a particular system property file to use as overrides
        -Dspring.properties.file=file://var/server.properties
        or
        -Dspring.properties.file=C://my.properties
    -->

    <!-- Use an instance of PropertyPlaceholderConfigurer to drag in system properties first -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!-- Servlet placeholder allows properties to be specified in the web.xml as well -->
    <!-- bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer" -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!-- Give precedence to system property and environment vars -->
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <!-- property name="searchContextAttributes" value="true"/>
        <property name="contextOverride" value="true"/ -->
        <!-- Allows resource files below to not exist -->
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:system.properties</value>
                <value>classpath:override.system.properties</value>
                <!-- value>${spring.properties.file}</value -->
            </list>
        </property>
    </bean>

    <bean id="remoteInvocationFactory"
          class="minestar.security.base.MineStarRemoteInvocationFactory"/>

    <bean id="rmiSocketFactory" class="minestar.security.base.RmiSocketFactory" factory-method="getInstance"/>

    <bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
        <property name="host" value="${MSTAR_BUS_HOST}"/>
        <property name="port" value="${MSTAR_BUS_PORT}"/>
        <property name="clientSocketFactory" ref="rmiSocketFactory"/>
        <property name="serverSocketFactory" ref="rmiSocketFactory"/>
    </bean>

    <bean id="parentRemote" class="org.springframework.remoting.rmi.RmiProxyFactoryBean" abstract="true"
          depends-on="rmiRegistry">
        <property name="registryClientSocketFactory" ref="rmiSocketFactory"/>
        <property name="lookupStubOnStartup" value="false"/>
        <property name="refreshStubOnConnectFailure" value="true"/>
        <property name="remoteInvocationFactory" ref="remoteInvocationFactory"/>
    </bean>

    <bean id="speedo" class="minestar.platform.service.monitor.SpeedoBean" init-method="init">
        <property name="period" value="60"/>
    </bean>
</beans>
