<?xml version="1.0" encoding="us-ascii" standalone="no"?>
<!-- Copyright (c) 2017, Caterpillar, Brisbane Australia. All rights reserved. -->

<!DOCTYPE classdefs SYSTEM "metadata.dtd">
<classdefs>
    <classdef name="ExecutorOptions">
        <privilege>Mining Block Management</privilege>
        <tag>system</tag>
        <propertydef name="executorName">
            <defaultvalue>JobExecutionService</defaultvalue>
        </propertydef>
    </classdef>
    <classdef name="AdvancedMiningBlockOptions">
        <tag>system</tag>
        <propertydef name="miningBlockDir" label="Base File Directory">
            <typedef>
                <type code="string"/>
            </typedef>
            <uidef widget="networkFileNameText"/>
            <defaultvalue type="python">getConfigNetworkPathOption('minestar.mine.service.material.imports.Config',
                'miningBlockDir')</defaultvalue>
            <description>The parent directory containing the source, processed and destination directories for the import process.</description>
        </propertydef>
        <propertydef name="outputRegionInPtsHeader">
            <typedef>
                <type code="boolean"/>
            </typedef>
            <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                'outputRegionInPtsHeader')</defaultvalue>
            <description>Set this option to include the region in the pts file header</description>
        </propertydef>
        <propertydef name="extraOutputText">
            <typedef>
                <type code="string"/>
            </typedef>
            <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                'extraOutputText')</defaultvalue>
            <description>Specify extra text to include in the pts file header</description>
        </propertydef>
    </classdef>
    <classdef name="Mining Block Importer">
        <implclass name='{preferredStyle:messageTree}'/>
        <privilege>Mining Block Management</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="standardOptions">
            <propertydef name="jobUrl">
                <uidef visiblewhen="false"/>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'importJobUrl')</defaultvalue>
            </propertydef>
            <propertydef name="advancedImport" label="Advanced Directory Prefix">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <uidef processOnChange = "true"/>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'advancedImports')</defaultvalue>
            </propertydef>

            <propertydef name="dirPrefix" label="Directory Prefix">
                <typedef>
                    <type code="string"/>
                </typedef>
                <uidef visiblewhen="form.getFieldValue('advancedImport') == false"/>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'dirPrefix')</defaultvalue>
                <description>The prefix used to make the directory names.&lt;ul&gt;&lt;li&gt;source directory = {Dir}/{prefix_}source&lt;/li&gt;&lt;li&gt;destination directory = {Dir}/{prefix_}dest&lt;/li&gt;&lt;li&gt;processed directory = {Dir}/{prefix_}processed&lt;/li&gt;&lt;/ul&gt;&lt;</description>
            </propertydef>
            <propertydef name="dirPrefixAdvanced" label="Directory Prefix">
                <uidef widget="nameValueSelection" visiblewhen="form.getFieldValue('advancedImport') == true" custom='{keyLabel:"",valueLabel:gradeBlockEngine,listValues:[minestar,externalBlock]}'/>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'dirPrefixAdvanced')</defaultvalue>
                <description>The prefix used to make the directory names.&lt;ul&gt;&lt;li&gt;source directory = {Dir}/{prefix_}source&lt;/li&gt;&lt;li&gt;destination directory = {Dir}/{prefix_}dest&lt;/li&gt;&lt;li&gt;processed directory = {Dir}/{prefix_}processed&lt;/li&gt;&lt;/ul&gt;&lt;</description>
            </propertydef>

            <propertydef name="readOnly">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'readOnly')</defaultvalue>
                <description>Set this option to import the block as read only</description>
            </propertydef>
            <propertydef name="overwrite">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'overwrite')</defaultvalue>
                <description>Set this option to overwrite existing blocks (otherwise they are ignored)</description>
            </propertydef>
            <propertydef name="delete">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'delete')</defaultvalue>
                <description>Set this option to delete existing blocks which do not exist in the import files</description>
            </propertydef>
            <propertydef name="validateOnly">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'validateOnly')</defaultvalue>
                <description>Set this option to validate contents of the imported blocks but do not save the data into MineStar</description>
            </propertydef>
            <propertygroup name="advanced">
                <uigroupdef mode="collapsed"/>
                <propertygroup name="common">
                    <uigroupdef source="Jobs:Production.AdvancedMiningBlockOptions" mode="plain"/>
                </propertygroup>
                <propertydef name="xOffset" label="X/Easting Offset">
                    <typedef>
                        <type code="int"/>
                    </typedef>
                    <description>The X/Easting Offset.</description>
                </propertydef>
                <propertydef name="yOffset" label="Y/Northing Offset">
                    <typedef>
                        <type code="int"/>
                    </typedef>
                    <description>The Y/Northing Offset.</description>
                </propertydef>
                <propertydef name="zOffset" label="Z Offset">
                    <typedef>
                        <type code="int"/>
                    </typedef>
                    <description>The Z Offset.</description>
                </propertydef>
                <propertydef name="xmlFile" label="Assignment XML File">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <defaultvalue type="python">getConfigOption('minestar.mine.service.material.imports.Config',
                        'xmlFile')</defaultvalue>
                    <description>The assignment destination configuration file.</description>
                </propertydef>
                <propertygroup name="nameMappings">
                    <uigroupdef mode="region"/>
                    <propertydef name="materialNameMappings" label="Material Name Mappings">
                        <typedef>
                            <type code="string"/>
                        </typedef>
                        <uidef widget="entrylist"/>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'materialNameMappings')</defaultvalue>
                        <description>Enter material code to name mappings, one per line, separated by '='.</description>
                    </propertydef>
                    <propertydef name="unmappedMaterialName" label="Unmapped Material Name">
                        <typedef>
                            <type code="string"/>
                        </typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'unmappedMaterialName')</defaultvalue>
                        <description>Material name to use when no mapping is found. If blank, then unmapped material name will be used.</description>
                    </propertydef>
                    <propertydef name="gradeNameMappings" label="Grade Name Mappings">
                        <typedef>
                            <type code="string"/>
                        </typedef>
                        <uidef widget="entrylist"/>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'gradeNameMappings')</defaultvalue>
                        <description>Enter grade code to name mappings, one per line, separated by '='.</description>
                    </propertydef>
                </propertygroup>
            </propertygroup>
        </propertygroup>
        <description>Imports mining block data (CSV format) into MineStar. Generates files for METS Manager.</description>
    </classdef>
    <classdef name="Mining Block Importer MkII">
        <implclass name='{preferredStyle:messageTree}'/>
        <privilege>Mining Block Management</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="standardOptions">
            <propertydef name="jobUrl">
                <uidef visiblewhen="false"/>
                <defaultvalue>minestar.mine.service.material.imports.GradeBlockImporter</defaultvalue>
            </propertydef>
            <propertydef name="advancedImport" label="Advanced Directory Prefix">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <uidef visiblewhen = "false"/>
                <defaultvalue>"false"</defaultvalue>
            </propertydef>
            <propertydef name="dirPrefix" label="Directory Prefix">
                <typedef>
                    <type code="string"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'dirPrefix')</defaultvalue>
                <description>The prefix used to make the directory names.&lt;ul&gt;&lt;li&gt;source directory = {Dir}/{prefix_}source&lt;/li&gt;&lt;li&gt;destination directory = {Dir}/{prefix_}dest&lt;/li&gt;&lt;li&gt;processed directory = {Dir}/{prefix_}processed&lt;/li&gt;&lt;/ul&gt;&lt;</description>
            </propertydef>
            <propertydef name="overwrite">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <description>Set this option to overwrite exisitng mining blocks (otherwise they are ignored)</description>
            </propertydef>
            <propertydef name="delete">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <description>Set this option to delete blocks on the specified bench rather than importing any blocks</description>
            </propertydef>
            <propertydef name="blockInfo" label="Block Hierarchy">
                <typedef><type code="string"/></typedef>
                <uidef widget="gradeBlockChooser" mask="directory" custom="{allowBlockSelection:false,showAllGroups:true}"/>
                <description>The bench to process.</description>
            </propertydef>
            <propertygroup name="advanced">
                <uigroupdef mode="collapsed"/>
                <propertygroup name="common">
                    <uigroupdef source="Jobs:Production.AdvancedMiningBlockOptions" mode="plain"/>
                </propertygroup>
                <propertydef name="xmlBlockFile" label="Block Definition File">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <defaultvalue type="python">getConfigOption('minestar.mine.service.material.imports.Config',
                        'xmlBlockFile')</defaultvalue>
                    <description>The block attribute definition file.</description>
                </propertydef>
            </propertygroup>
        </propertygroup>
        <description>Imports mining block data (typically MEDS data) into MineStar. Generates files for METS Manager.</description>
    </classdef>
    <classdef name="SurPac Mining Block Importer">
        <implclass name='{preferredStyle:messageTree}'/>
        <privilege>SurPac Mining Block Importer</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="standardOptions">
            <propertydef name="jobUrl">
                <uidef visiblewhen="false"/>
                <defaultvalue>minestar.mine.service.material.imports.SurpacGradeBlockImporter</defaultvalue>
            </propertydef>
            <propertydef name="miningBlockDir" label="Base File Directory">
                <typedef>
                    <type code="string"/>
                </typedef>
                <uidef widget="networkFileNameText"/>
                <defaultvalue type="python">getConfigNetworkPathOption('minestar.mine.service.material.imports.Config',
                    'miningBlockDir')</defaultvalue>
                <description>The parent directory containing the source, processed and destination directories for the import process.</description>
            </propertydef>
            <propertydef name="advancedImport" label="Advanced Directory Prefix">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <uidef visiblewhen = "false"/>
                <defaultvalue>"false"</defaultvalue>
            </propertydef>
            <propertydef name="dirPrefix" label="Directory Prefix">
                <typedef>
                    <type code="string"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'dirPrefix')</defaultvalue>
                <description>The prefix used to make the directory names.&lt;ul&gt;&lt;li&gt;surpac directory = {Dir}/{prefix_}source&lt;/li&gt;&lt;li&gt;destination directory = {Dir}/{prefix_}dest&lt;/li&gt;&lt;li&gt;processed directory = {Dir}/{prefix_}processed&lt;/li&gt;&lt;/ul&gt;&lt;</description>
            </propertydef>
            <propertydef name="plyFileSuffix" label="SurPac File Extension">
                <typedef>
                    <type code="string"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'plyFileSuffix')</defaultvalue>
                <description>The extension upon SurPac files.</description>
            </propertydef>
            <propertydef name="surpacDefaults" label="Default Values">
                <typedef>
                    <type code="string"/>
                </typedef>
                <uidef widget="entrylist"/>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'surpacDefaults')</defaultvalue>
                <description>Enter default values, one per line, using '='.</description>
            </propertydef>
            <propertydef name="surpacFieldNames" label="SurPac File Format">
                <typedef>
                    <type code="string"/>
                </typedef>
                <uidef widget="entrylist"/>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'surpacFieldNames')</defaultvalue>
                <description>Enter the field names of detail lines in the Surpac file, one per line, in the order they appear (left to right).</description>
            </propertydef>
        </propertygroup>
        <propertygroup name="advanced">
            <propertygroup name="offsets">
                <uigroupdef mode="region"/>
                <propertydef name="xOffset" label="X/Easting Offset">
                    <typedef>
                        <type code="int"/>
                    </typedef>
                    <description>The X/Easting Offset.</description>
                </propertydef>
                <propertydef name="yOffset" label="Y/Northing Offset">
                    <typedef>
                        <type code="int"/>
                    </typedef>
                    <description>The Y/Northing Offset.</description>
                </propertydef>
                <propertydef name="zOffset" label="Z Offset">
                    <typedef>
                        <type code="int"/>
                    </typedef>
                    <description>The Z Offset.</description>
                </propertydef>
            </propertygroup>
            <propertygroup name="nameMappings">
                <uigroupdef mode="region"/>
                <propertydef name="materialNameMappings" label="Material Name Mappings">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <uidef widget="entrylist"/>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'materialNameMappings')</defaultvalue>
                    <description>Enter material code to name mappings, one per line, separated by '='.</description>
                </propertydef>
                <propertydef name="unmappedMaterialName" label="Unmapped Material Name">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'unmappedMaterialName')</defaultvalue>
                    <description>Material name to use when no mapping is found. If blank, then unmapped material name will be used.</description>
                </propertydef>
            </propertygroup>
        </propertygroup>
        <description>Imports mining block data (SurPac format) into MineStar.</description>
    </classdef>
    <classdef name="Mining Block Exporter">
        <implclass name='{preferredStyle:messageTree}'/>
        <privilege>Mining Block Management</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="standardOptions">
            <propertydef name="jobUrl">
                <uidef visiblewhen="false"/>
                <defaultvalue>minestar.mine.service.material.imports.CSVGradeBlockExporter</defaultvalue>
            </propertydef>
            <propertydef name="advancedImport" label="Advanced Directory Prefix">
                <typedef>
                    <type code="boolean"/>
                </typedef>
                <uidef visiblewhen = "false"/>
                <defaultvalue>"false"</defaultvalue>
            </propertydef>
            <propertydef name="dirPrefix" label="Directory Prefix">
                <typedef>
                    <type code="string"/>
                </typedef>
                <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                    'dirPrefix')</defaultvalue>
                <description>The prefix used to make the directory names.&lt;ul&gt;&lt;li&gt;source directory = {Dir}/{prefix_}source&lt;/li&gt;&lt;li&gt;destination directory = {Dir}/{prefix_}dest&lt;/li&gt;&lt;li&gt;processed directory = {Dir}/{prefix_}processed&lt;/li&gt;&lt;/ul&gt;&lt;</description>
            </propertydef>
            <propertydef name="blockInfo" label="Block Hierarchy">
                <typedef><type code="string"/></typedef>
                <uidef widget="gradeBlockGroupChooser" mask="directory" custom="{allowBlockSelection:false,preferredHeight:400}"/>
                <description>The bench(s) to export.</description>
            </propertydef>
            <propertygroup name="advanced">
                <uigroupdef mode="collapsed"/>
                <propertygroup name="common">
                    <uigroupdef source="Jobs:Production.AdvancedMiningBlockOptions" mode="plain"/>
                </propertygroup>
            </propertygroup>
        </propertygroup>
        <description>Exports mining block data from MineStar. Generates files for METS Manager.</description>
    </classdef>
    <classdef name="Oracle Mining Block Extractor">
        <implclass name='{preferredStyle:messageTree}'/>
        <privilege>Mining Block Management</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="standardOptions">
            <propertydef name="jobUrl">
                <uidef visiblewhen="false"/>
                <defaultvalue>minestar.mine.service.material.imports.OracleGradeBlockExtractor</defaultvalue>
            </propertydef>
            <propertygroup name="databaseOptions">
                <uigroupdef mode="box"/>
                <propertygroup name="connectionDetails">
                    <uigroupdef mode="region"/>
                    <propertydef name="serverName">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'serverName')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                    <propertydef name="instanceName">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'instanceName')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                    <propertydef name="user">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'user')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                    <propertydef name="password">
                        <typedef><type code="string"/></typedef>
                        <uidef widget="password"/>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'password')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                </propertygroup>
                <propertygroup name="schemaDetails">
                    <uigroupdef mode="region"/>
                    <propertydef name="statusTableName">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'statusTableName')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                    <propertydef name="flagColumnName">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'flagColumnName')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                    <propertydef name="unprocessedFlagValue">
                        <typedef><type code="boolean" choices='{Boolean(false):"0/false", Boolean(true):"1/true"}'/></typedef>
                        <uidef widget="radio"/>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'unprocessedFlagValue')</defaultvalue>
                        <description>Only records with the flag column set to this value will be processed</description>
                    </propertydef>
                    <propertydef name="blockDataTableName">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'blockDataTableName')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                    <propertydef name="blockDataCondition">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'blockDataCondition')</defaultvalue>
                    </propertydef>
                    <propertydef name="polygonTableName">
                        <typedef><type code="string"/></typedef>
                        <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                            'polygonTableName')</defaultvalue>
                        <validationdef name="required" type="shared"/>
                    </propertydef>
                </propertygroup>
            </propertygroup>
            <propertygroup name="miningBlockOptions">
                <uigroupdef mode="region"/>
                <propertydef name="blockNamePattern">
                    <typedef><type code="string"/></typedef>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'blockNamePattern')</defaultvalue>
                </propertydef>
                <propertydef name="nrHierarchyFolders">
                    <typedef><type code="int"/></typedef>
                    <uidef widget="spinner" custom='{ setMinimum:1, setMaximum:4}'/>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'nrHierarchyFolders')</defaultvalue>
                </propertydef>
                <propertydef name="materialNameMappings" label="Material Name Mappings">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <uidef widget="entrylist"/>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'materialNameMappings')</defaultvalue>
                    <description>Enter material code to name mappings, one per line, separated by '='.</description>
                </propertydef>
                <propertydef name="gradeNameMappings" label="Grade Name Mappings">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <uidef widget="entrylist"/>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'gradeNameMappings')</defaultvalue>
                    <description>Enter grade code to name mappings, one per line, separated by '='.</description>
                </propertydef>
            </propertygroup>
            <propertygroup name="advanced">
                <uigroupdef mode="collapsed"/>
                <propertydef name="miningBlockDir" label="Base File Directory">
                    <typedef><type code="string"/></typedef>
                    <uidef widget="networkFileNameText"/>
                    <defaultvalue type="python">getConfigNetworkPathOption('minestar.mine.service.material.imports.Config',
                        'miningBlockDir')</defaultvalue>
                    <description>The parent directory containing the source, processed and destination directories for the import process.</description>
                </propertydef>
                <propertydef name="dirPrefix" label="Directory Prefix">
                    <typedef><type code="string"/></typedef>
                    <defaultvalue type="python">getConfigPathOption('minestar.mine.service.material.imports.Config',
                        'dirPrefix')</defaultvalue>
                    <description>The prefix used to make the directory name where the files will be created.&lt;ul&gt;&lt;li&gt;directory = {Dir}/{prefix_}source&lt;/li&gt;&lt;li&gt;</description>
                </propertydef>
            </propertygroup>
        </propertygroup>
        <description>Extracts mining blocks from an Oracle database. Generates files for MineStar Mining Block Importer.</description>
    </classdef>
    <classdef name="BatchCycleUpdate">
        <implclass name='{jobUrl:com.mincom.works.cc.cycle.utility.CycleRecalcUtility,preferredStyle:messageTree}'/>
        <privilege>Cycle Management</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="options" label="Standard Options" >
            <uigroupdef mode="plain"/>
            <propertygroup name="cycleFiltering" label="Cycle Filtering">
                <uigroupdef mode="box"/>
                <propertygroup name="filterModeGrp">
                    <uigroupdef mode="plain"/>
                    <propertydef name="filterMode" label="Filter Mode">
                        <typedef>
                            <type code="string" choices='{0:"Filter By Fields", 1:"Filter From File"}'/>
                        </typedef>
                        <uidef widget="radio" processOnChange="true"/>
                        <description>Use Filter From File when a list of cycles ids has been previously saved to a file.</description>
                    </propertydef>
                </propertygroup>
                <propertygroup name="filterByFields">
                    <uigroupdef mode="plain" visiblewhen="field('filterMode')==0"/>
                    <propertygroup name="periodSelector">
                        <uigroupdef mode="region"/>
                        <propertydef name="PeriodDesc" label="Period">
                            <typedef>
                                <type code="string"/>
                            </typedef>
                            <uidef widget="period" option="startDate,endDate" updateable="false" />
                        </propertydef>
                        <propertydef name="startDate" label="Start Date">
                            <typedef>
                                <javaclass name="java.util.Date"/>
                            </typedef>
                        </propertydef>
                        <propertydef name="endDate" label="End Date">
                            <typedef>
                                <javaclass name="java.util.Date"/>
                            </typedef>
                        </propertydef>
                    </propertygroup>
                    <propertygroup name="propertyFilter" label="Matching Criteria">
                        <uigroupdef mode="region"/>
                        <propertydef name="primaryMachineName" label="Primary Machine Name(s)">
                            <typedef>
                                <type code="string" choices="service(minestar.pitlink.application.MachineCollectionProvider):MobileMachine"/>
                            </typedef>
                            <uidef widget="ordered" mode="popup"/>
                        </propertydef>
                        <propertydef name="sourceBlockName" label="Source Blocks">
                            <typedef>
                                <type code="string" choices="service(minestar.machinetracking.application.MaterialCollectionProvider):gradeBlocks"/>
                            </typedef>
                            <uidef widget="ordered" mode="popup"/>
                        </propertydef>
                        <propertydef name="sourceDestinationName" label="Source Destinations">
                            <typedef>
                                <type code="string" choices="service(minestar.mine.application.LocationCollectionProvider):sourceLocations"/>
                            </typedef>
                            <uidef widget="ordered" mode="popup"/>
                        </propertydef>
                        <propertydef name="sinkBlockName" label="Sink Blocks">
                            <typedef>
                                <type code="string" choices="service(minestar.machinetracking.application.MaterialCollectionProvider):gradeBlocks"/>
                            </typedef>
                            <uidef widget="ordered" mode="popup"/>
                        </propertydef>
                        <propertydef name="sinkDestinationName" label="Sink Destinations">
                            <typedef>
                                <type code="string" choices="service(minestar.mine.application.LocationCollectionProvider):sinkLocations"/>
                            </typedef>
                            <uidef widget="ordered" mode="popup"/>
                        </propertydef>
                    </propertygroup>
                </propertygroup>
                <propertygroup name="filterFromFile">
                    <uigroupdef mode="plain" visiblewhen="field('filterMode')==1"/>
                    <propertydef name="filterFile" label="Filter File">
                        <typedef>
                            <type code="string"/>
                        </typedef>
                        <defaultvalue>{MSTAR_DATA}/cyclefilter.txt</defaultvalue>
                        <description>A file which contains one cycle id per line.</description>
                    </propertydef>
                </propertygroup>
            </propertygroup>
            <propertygroup name="updateModeGrp">
                <uigroupdef mode="plain"/>
                <propertydef name="updateMode" label="Update Mode">
                    <typedef>
                        <type code="string" choices='{0:"Update Cycles", 1:"Recalc Reporting Data"}'/>
                    </typedef>
                    <uidef widget="radio" processOnChange="true"/>
                    <description>Choose "Recalc Reporting Data" to re-apply load factors.</description>
                </propertydef>
            </propertygroup>
            <propertygroup name="operations" label="Update Operations">
                <uigroupdef mode="box" visiblewhen="field('updateMode')==0"/>
                <propertydef name="newSourceBlockName" label="New Source Block Name">
                    <typedef>
                        <type code="string" choices="service(minestar.machinetracking.application.MaterialCollectionProvider):gradeBlocks"/>
                    </typedef>
                    <uidef widget="combo"/>
                </propertydef>
                <propertydef name="newSourceDestinationName" label="New Source Destination Name">
                    <typedef>
                        <type code="string" choices="service(minestar.mine.application.LocationCollectionProvider):sourceLocations"/>
                    </typedef>
                    <uidef widget="combo"/>
                </propertydef>
                <propertydef name="newSinkBlockName" label="New Sink Block Name">
                    <typedef>
                        <type code="string" choices="service(minestar.machinetracking.application.MaterialCollectionProvider):gradeBlocks"/>
                    </typedef>
                    <uidef widget="combo"/>
                </propertydef>
                <propertydef name="newSinkDestinationName" label="New Sink Destination Name">
                    <typedef>
                        <type code="string" choices="service(minestar.mine.application.LocationCollectionProvider):sinkLocations"/>
                    </typedef>
                    <uidef widget="combo"/>
                </propertydef>
                <propertydef name="newRehandle" label="New Rehandle Flag">
                    <typedef>
                        <type code="string" choices='{Boolean(false):"false",Boolean(true):"true"}'/>
                    </typedef>
                    <uidef widget="combo"/>
                </propertydef>
                <propertydef name="recalcGrades" label="Re-Apply Grade Values">
                    <typedef>
                        <type code="boolean"/>
                    </typedef>
                </propertydef>
                <propertydef name="recalcSummaryInfo" label="Re-Apply Road/Activity Summary Information">
                    <typedef>
                        <type code="boolean"/>
                    </typedef>
                </propertydef>
                <propertydef name="commit" label="Commit Changes">
                    <typedef>
                        <type code="boolean"/>
                    </typedef>
                </propertydef>
                <propertydef name="changeFile" label="Change File">
                    <typedef>
                        <type code="string"/>
                    </typedef>
                    <defaultvalue>{MSTAR_DATA}/cyclechanges.csv</defaultvalue>
                    <description>A CSV file which is updated with the changed cycle data.</description>
                </propertydef>
            </propertygroup>
            <propertygroup name="runParameters" label="Advanced Parameters">
                <uigroupdef mode="collapsed"/>
                <propertydef name="chunkSizeHours" label="Chunk Size (Hours)">
                    <typedef>
                        <type code="short"/>
                    </typedef>
                    <uidef widget="spinner" custom='{setMinimum:0, setMaximum:24}'/>
                    <defaultvalue>12</defaultvalue>
                    <description>The size of query chunk in hours.</description>
                </propertydef>
                <propertydef name="waitTime" label="Wait Time (s)">
                    <typedef>
                        <type code="short"/>
                    </typedef>
                    <uidef widget="spinner" custom='{setMinimum:0, setMaximum:60}'/>
                    <defaultvalue>0</defaultvalue>
                    <description>The time to wait between each cycle update (in seconds).</description>
                </propertydef>
            </propertygroup>
        </propertygroup>
        <description>Perform bulk cycle and/or summaries updates.</description>
    </classdef>
    <!--
    This configuration is added to include new Job that updates cycle records with latest grade information.
    This LOC is added to fix the JIRA: MSTAR-2204 and MSTAR-2205.
    -->
    <classdef name="ExternalMiningBlockUpdater">
        <implclass name='{preferredStyle:messageTree}'/>
        <privilege>Cycle Management</privilege>
        <tag>user</tag>
        <propertygroup name="executorOptions">
            <uigroupdef source="Jobs:Production.ExecutorOptions" visiblewhen="false"/>
        </propertygroup>
        <propertygroup name="options" label="Standard Options" >
            <propertydef name="jobUrl">
                <uidef visiblewhen="false"/>
                <defaultvalue>com.mincom.works.cc.cycle.utility.ExternalGradeBlockUpdater</defaultvalue>
            </propertydef>
            <propertygroup name="externalGradeBlockUpdater" label="Cycle Updater">
                <uigroupdef mode="box"/>
                <propertygroup name="runParameters">
                    <uigroupdef mode="region"/>
                    <propertydef name="waitTime" label="Wait Time (s)">
                        <typedef>
                            <type code="short"/>
                        </typedef>
                        <uidef widget="spinner" custom='{setMinimum:0, setMaximum:60}'/>
                        <defaultvalue>0</defaultvalue>
                        <description>The time to wait between each cycle update (in seconds).</description>
                    </propertydef>
                </propertygroup>
                <propertygroup name="propertyFilter" label="Bulk Retrieval Of NULL Values">
                    <uigroupdef mode="region"/>
                    <propertydef name="update" label="Update Cycles Having NULL Grade Values">
                        <typedef>
                            <type code="boolean"/>
                        </typedef>
                    </propertydef>
                </propertygroup>
            </propertygroup>
        </propertygroup>
        <description>Updates the cycle data with the latest mining block information from external database.</description>
    </classdef>
</classdefs>
