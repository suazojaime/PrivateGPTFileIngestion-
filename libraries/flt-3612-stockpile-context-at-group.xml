<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ // Copyright (c) 2015. Caterpillar, Brisbane Australia. All rights reserved.
  -->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd http://www.liquibase.org/xml/ns/dbchangelog-ext /dbchangelog-ext-3.1.xsd">

    <changeSet id="9db7c394-139a-4cd2-9890-c34395d5b777" author="MineStar" failOnError="false">
        <preConditions onFailMessage="Ignored AddColumn for STOCKPILE to table GRADEBLOCK_GROUP as table does not exist or column already exists." onFail="MARK_RAN">
            <tableExists tableName="GRADEBLOCK_GROUP"/>
            <not>
                <columnExists tableName="GRADEBLOCK_GROUP" columnName="STOCKPILE"/>
            </not>
        </preConditions>
        <comment>FLT-3612: AddColumn GRADEBLOCK_GROUP.STOCKPILE</comment>
        <addColumn tableName="GRADEBLOCK_GROUP">
            <column name="STOCKPILE" type="BOOLEAN" />
        </addColumn>
    </changeSet>

    <changeSet id="abfcf783-1426-4796-befa-ccc401d590ec" author="MineStar" failOnError="false">
        <comment>FLT-3612: Populate GRADEBLOCK_GROUP.STOCKPILE part 2</comment>
        <rollback/>
        <sql>update gradeblock_group set stockpile = 0 where stockpile is null</sql>
    </changeSet>

    <changeSet id="d2b405af-2a3f-42e6-aee6-bcfb377ec3f8" author="MineStar" failOnError="false">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1" >select count(*) from gradeblock_group where name = 'Stockpiles'</sqlCheck>
            <not>
                <sqlCheck expectedResult="1" >
                    select count(*) from gradeblock_group_subdir where oid =
                    (select gradeblock_group_oid from gradeblock_group where name = 'root') and
                    gradeblock_group_oid =
                    (select gradeblock_group_oid from gradeblock_group where name = 'Stockpiles')
                </sqlCheck>
            </not>
        </preConditions>
        <comment>FLT-3612: creating relationship between Root and Stockpiles </comment>
        <rollback/>
        <sql>
            insert into gradeblock_group_subdir (oid,gradeblock_group_oid) values
            ((select gradeblock_group_oid from gradeblock_group where name = 'root'),(select gradeblock_group_oid from gradeblock_group where name = 'Stockpiles'))
        </sql>
    </changeSet>

    <changeSet id="1b78384e-440c-439d-9e1c-0c12800e0425" author="MineStar" failOnError="false" dbms="oracle">
        <comment>FLT-3612: Populate GRADEBLOCK_GROUP.STOCKPILE derived from anything under Stockpiles</comment>
        <rollback/>
        <sql>
            update gradeblock_group b set b.stockpile = 1
            where gradeblock_group_oid in (
            with stockpile_groups ( gradeblock_group_oid, name ) as
            (
            select gradeblock_group_oid,name
            from
                gradeblock_group
            where
                name = 'Stockpiles'
            union all
            select
                s.gradeblock_group_oid,gg.name
            from
                gradeblock_group_subdir s,
                gradeblock_group gg,
                stockpile_groups g
            where
                gg.gradeblock_group_oid = s.gradeblock_group_oid and
                g.gradeblock_group_oid = s.oid
            )
            select gradeblock_group_oid from stockpile_groups spg
            where spg.gradeblock_group_oid = b.gradeblock_group_oid
            )
        </sql>
        <sql>
            update gradeblock_group set stockpile = 0 where stockpile is null
        </sql>
    </changeSet>

    <changeSet id="f2f3f340-a593-11e6-80f5-76304dec7eb7" author="MineStar" failOnError="false" dbms="mssql">
        <comment>FLT-3612: Populate GRADEBLOCK_GROUP.STOCKPILE derived from anything under Stockpiles</comment>
        <rollback/>
        <sql>
            ; with stockpile_groups (gradeblock_group_oid,name) as
            (
            select gradeblock_group_oid,name
            from gradeblock_group
            where name = 'Stockpiles'

            union all

            select s.gradeblock_group_oid,gg.name
            from gradeblock_group_subdir s
            INNER JOIN gradeblock_group gg ON gg.gradeblock_group_oid = s.gradeblock_group_oid
            INNER JOIN stockpile_groups g ON g.gradeblock_group_oid = s.oid
            )
            update  b
            set b.stockpile = 1
            FROM gradeblock_group b
            where gradeblock_group_oid = b.gradeblock_group_oid
        </sql>
        <sql>
            update gradeblock_group set stockpile = 0 where stockpile is null
        </sql>
    </changeSet>


</databaseChangeLog>
