<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) 2017, Caterpillar, Brisbane Australia. All rights reserved. -->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="0a635d12-ed4b-4d3f-9cd9-1c20d456623c" author="MineStar" failOnError="false">
        <preConditions onFailMessage="Ignored AddColumn for OPERATING_STATUS to table UNDERGROUND_PANEL as table does not exist or column already exists." onFail="MARK_RAN">
            <tableExists tableName="UNDERGROUND_PANEL"/>
            <not>
                <columnExists tableName="UNDERGROUND_PANEL" columnName="OPERATING_STATUS"/>
            </not>
        </preConditions>
        <comment>FUG-45OO: AddColumn UNDERGROUND_PANEL.OPERATING_STATUS</comment>
        <addColumn tableName="UNDERGROUND_PANEL">
            <column name="OPERATING_STATUS" type="BIGINT" remarks="A reference to the operating status (MSMODEL.OPERATING_STATUS) that describes the current operating conditions of this panel."/>
        </addColumn>
    </changeSet>

    <changeSet id="5c450d83-d5c6-4ae4-8870-7b44bc02651c" author="MineStar" context="Underground/Underground_Management" failOnError="false">
        <preConditions onFailMessage="Ignored AddForeignKeyConstraint for UNDERGROUND_PANEL_OPERATING_FK to table UNDERGROUND_PANEL as (1) the source or referenced column does not exist, or (2) the foreignKey already exists." onFail="MARK_RAN">
            <columnExists tableName="UNDERGROUND_PANEL" columnName="OPERATING_STATUS"/>
            <columnExists tableName="OPERATING_STATUS" columnName="OID"/>
            <not>
                <foreignKeyConstraintExists foreignKeyTableName="UNDERGROUND_PANEL" foreignKeyName="UNDERGROUND_PANEL_OPERATING_FK"/>
            </not>
        </preConditions>
        <comment>FUG-45OO: AddForeignKeyConstraint UNDERGROUND_PANEL_OPERATING_FK to UNDERGROUND_PANEL (OPERATING_STATUS)</comment>
        <sql>UPDATE UNDERGROUND_PANEL SET OPERATING_STATUS = NULL WHERE OPERATING_STATUS IS NOT NULL AND NOT EXISTS (SELECT 'x' FROM OPERATING_STATUS WHERE OPERATING_STATUS.OID = UNDERGROUND_PANEL.OPERATING_STATUS)</sql>
        <addForeignKeyConstraint baseTableName="UNDERGROUND_PANEL" baseColumnNames="OPERATING_STATUS" constraintName="UNDERGROUND_PANEL_OPERATING_FK" referencedTableName="OPERATING_STATUS" referencedColumnNames="OID" onDelete="NO ACTION"/>
        <rollback>
            <dropForeignKeyConstraint baseTableName="UNDERGROUND_PANEL" constraintName="UNDERGROUND_PANEL_OPERATING_FK"/>
        </rollback>
    </changeSet>

    <changeSet id="ef0bcffd-7a0d-4e85-9d71-a6563af70468" author="MineStar" context="Underground/Underground_Management" failOnError="false">
        <preConditions onFailMessage="Ignored CreateProcedure add_panel_operating_status." onFail="MARK_RAN">
            <columnExists tableName="UNDERGROUND_PANEL" columnName="PANEL_STATUS"/>
        </preConditions>
        <comment>FUG-45OO: CreateProcedure add_panel_operating_status</comment>
        <createProcedure procedureName="add_panel_operating_status" dbms="oracle">
            create or replace procedure add_panel_operating_status
            (
                param_reason IN VARCHAR2,
                param_defaultstatus IN NUMBER,
                param_closed IN NUMBER
            )
            as
                var_count NUMBER(10);
                var_id NUMBER(10);
            begin
                select count(*) into var_count from OPERATING_STATUS where REASON = param_reason and ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus';

                if var_count = 0 then
                    dbms_output.put_line('Adding panel operating status: ' || param_reason);

                    select COALESCE(MAX(ID), 0)+1 into var_id from OPERATING_STATUS;

                    insert into OPERATING_STATUS
                        (OID, ID, ECF_CLASS_ID, REASON, IS_ACTIVE, DEFAULTSTATUS, CLOSED, HUNGUP, BLOCKED)
                    values
                        (nextOID(), var_id, 'XAEntity.UndergroundPanelOperatingStatus', param_reason, 1, param_defaultstatus, param_closed, 0, 0);
                end if;
            end;
        </createProcedure>
        <sql dbms="mssql">
            IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[add_panel_operating_status]') AND type IN (N'P', N'PC'))
                DROP PROCEDURE [dbo].[add_panel_operating_status]
        </sql>
        <createProcedure procedureName="add_panel_operating_status" dbms="mssql">
            create procedure [dbo].add_panel_operating_status
            (
                @param_reason VARCHAR(255),
                @param_defaultstatus BIT,
                @param_closed BIT)
            as
            begin
                declare @var_count INTEGER;
                declare @var_id INTEGER;

                set nocount on

                select @var_count = count(*) from [dbo].OPERATING_STATUS where REASON = @param_reason and ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus';

                if @var_count = 0 begin
                    print 'Adding panel operating status: ' + isnull(@param_reason, '');

                    select @var_id = COALESCE(MAX(ID),0)+1 from OPERATING_STATUS;

                    create table #tempOID (nextOID INTEGER);
                    insert into #tempOID (nextOID) EXEC [dbo].nextOID;

                    insert into OPERATING_STATUS
                        (OID, ID, ECF_CLASS_ID, REASON, IS_ACTIVE, DEFAULTSTATUS, CLOSED, HUNGUP, BLOCKED)
                    values
                        ((select nextOID from #tempOID), @var_id, 'XAEntity.UndergroundPanelOperatingStatus', @param_reason, 1, @param_defaultstatus, @param_closed, 0, 0);

                    drop table #tempOID;
                end
            end
        </createProcedure>
        <rollback>
            <dropProcedure procedureName="add_panel_operating_status"/>
        </rollback>
    </changeSet>

    <changeSet id="74104d73-f28b-4da9-963b-d0f3ecbb21b6" author="MineStar" context="Underground/Underground_Management" failOnError="false">
        <preConditions onFailMessage="Ignored creating default open panel operating status as it already exists." onFail="MARK_RAN">
            <columnExists tableName="UNDERGROUND_PANEL" columnName="PANEL_STATUS"/>
            <sqlCheck expectedResult="0">
                select count(*)
                from OPERATING_STATUS
                where ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus'
                and REASON = 'Open'
            </sqlCheck>
        </preConditions>
        <comment>FUG-45OO: Create default open panel operating status</comment>
        <sql dbms="oracle">
            call add_panel_operating_status('Open', 1, 0)
        </sql>
        <sql dbms="mssql">
            exec add_panel_operating_status 'Open', 1, 0
        </sql>
        <rollback>
            <sql>
                delete from OPERATING_STATUS
                where ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus'
                and REASON = 'Open'
            </sql>
        </rollback>
    </changeSet>

    <changeSet id="dde55e56-523b-4b0c-a501-9babf3644c17" author="MineStar" context="Underground/Underground_Management" failOnError="false">
        <preConditions onFailMessage="Ignored create closed panel operating status from UNDERGROUND_PANEL.PANEL_STATUS." onFail="MARK_RAN">
            <columnExists tableName="UNDERGROUND_PANEL" columnName="PANEL_STATUS"/>
        </preConditions>
        <comment>FUG-45OO: Create closed panel operating status from UNDERGROUND_PANEL.PANEL_STATUS</comment>
        <sql dbms="oracle" endDelimiter="/">
            begin
                for rec in (select distinct PANEL_STATUS from UNDERGROUND_PANEL where PANEL_STATUS != 'Open')
                loop
                    add_panel_operating_status(rec.PANEL_STATUS, 0, 1);
                end loop;
            end;
            /
        </sql>
        <sql dbms="mssql" endDelimiter="/">
            begin
                declare @panel_status VARCHAR(255);
                set nocount on
                declare rec cursor for select distinct panel_status from underground_panel where panel_status != 'Open';
                open rec;
                fetch next from rec into @panel_status;
                while @@FETCH_STATUS = 0
                begin
                    exec add_panel_operating_status @panel_status, 0, 1;
                    fetch next from rec into @panel_status;
                end
                close rec;
                deallocate rec;
            end
            /
        </sql>
        <rollback>
            <sql>
                delete from OPERATING_STATUS
                where ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus'
                and REASON != 'Open'
            </sql>
        </rollback>
    </changeSet>

    <changeSet id="e8b85d73-04d4-41f1-a67a-b4704a1cad72" author="MineStar" context="Underground/Underground_Management" failOnError="false">
        <preConditions onFailMessage="Ignored set values in UNDERGROUND_PANEL.OPERATING_STATUS." onFail="MARK_RAN">
            <columnExists tableName="UNDERGROUND_PANEL" columnName="PANEL_STATUS"/>
            <columnExists tableName="UNDERGROUND_PANEL" columnName="OPERATING_STATUS"/>
        </preConditions>
        <comment>FUG-45OO: Set values in UNDERGROUND_PANEL.OPERATING_STATUS</comment>
        <sql dbms="oracle,mssql">
            update UNDERGROUND_PANEL
            set OPERATING_STATUS = (select s.OID from OPERATING_STATUS s where s.REASON = UNDERGROUND_PANEL.PANEL_STATUS and s.ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus')
            where UNDERGROUND_PANEL.OPERATING_STATUS is null
            and UNDERGROUND_PANEL.PANEL_STATUS in (select REASON from OPERATING_STATUS where ECF_CLASS_ID = 'XAEntity.UndergroundPanelOperatingStatus');
        </sql>
        <rollback>
            <sql>
                update UNDERGROUND_PANEL
                set OPERATING_STATUS = null;
            </sql>
        </rollback>
    </changeSet>

    <changeSet id="6ced36ba-ac18-4c07-82a1-849fdb27470c" author="MineStar" failOnError="false">
        <preConditions onFailMessage="Ignored DropColumn for PANEL_STATUS of table UNDERGROUND_PANEL as column does not exist." onFail="MARK_RAN">
            <columnExists tableName="UNDERGROUND_PANEL" columnName="PANEL_STATUS"/>
        </preConditions>
        <comment>FUG-45OO: DropColumn UNDERGROUND_PANEL.PANEL_STATUS</comment>
        <dropColumn tableName="UNDERGROUND_PANEL" columnName="PANEL_STATUS"/>
        <rollback>
            <addColumn tableName="UNDERGROUND_PANEL">
                <column name="PANEL_STATUS" type="VARCHAR(255)">
                    <constraints nullable="false"/>
                </column>
            </addColumn>
        </rollback>
    </changeSet>

</databaseChangeLog>
