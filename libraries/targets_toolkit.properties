# Copyright (c) 2022 Caterpillar

#### Setup Tools ####

unitBuilder.filename=minestar.platform.persistence.service.tools.UnitBuilder
unitBuilder.description=Fix units or install a new unit set
unitBuilder.tags=development,Enterprise
unitBuilder.group=Setup

syncUsersFromPortal.filename=com.mincom.env.tool.user.PortalSync
syncUsersFromPortal.passBusUrl=1
syncUsersFromPortal.description=Synchronise MineStar users with portal users
syncUsersFromPortal.tags=development,Enterprise
syncUsersFromPortal.group=Admin
syncUsersFromPortal.argcheck=

# I don't think this will work from within Supervisor because it renames the mstar directory!
# As a result, do NOT give it a group.
upgrade.filename=bus/pythonlib/upgrade.py
upgrade.description=Upgrade a MineStar installation by unpacking a ZIP file
upgrade.argcheck=<zipfile> [quick]

applySystemOptions.filename=bus/pythonlib/applySystemOptions.py
applySystemOptions.description=Reconfigure a system after the system options are changed
applySystemOptions.tags=development
applySystemOptions.group=Setup
applySystemOptions.argcheck=

makeCatalogs.filename=bus/pythonlib/makeCatalogs.py
makeCatalogs.description=Refresh the catalogs used by the Runner pages
makeCatalogs.tags=admin
makeCatalogs.group=Setup
makeCatalogs.argnames=Catalog
makeCatalogs.form=Forms:Tools.makeCatalogs

overrides.filename=bus/pythonlib/overridesToolApp.py
overrides.description=Manage overrides
overrides.tags=admin
overrides.group=Setup

#### Data Management Tools ####

parseSpeedos.filename=minestar.platform.application.SpeedoLineParser
parseSpeedos.description=Parse 'Speedo' lines from MineStar log files into JSON format for post-analysis
parseSpeedos.tags=admin
parseSpeedos.group=Setup
parseSpeedos.form=Forms:Tools.parseSpeedos
parseSpeedos.JAVA_MEM64=-Xmx1024m
parseSpeedos.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

parseBusyThreads.filename=minestar.platform.application.BusyThreadLineParser
parseBusyThreads.description=Parse 'BusyThread' lines from MineStar log files into JSON format for post-analysis
parseBusyThreads.tags=admin
parseBusyThreads.group=Setup
parseBusyThreads.form=Forms:Tools.parseBusyThreads
parseBusyThreads.JAVA_MEM64=-Xmx1024m
parseBusyThreads.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

parseGarbageCollections.filename=minestar.platform.application.GarbageCollectionLineParser
parseGarbageCollections.description=Parse 'GarbageCollection' lines from MineStar log files into JSON format for post-analysis
parseGarbageCollections.tags=admin
parseGarbageCollections.group=Setup
parseGarbageCollections.form=Forms:Tools.parseGarbageCollections
parseGarbageCollections.JAVA_MEM64=-Xmx1024m
parseGarbageCollections.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

parseLogSummary.filename=minestar.platform.application.LogSummaryParser
parseLogSummary.description=Parse a performance summary from MineStar log files into a HTML report
parseLogSummary.tags=admin
parseLogSummary.group=Setup
parseLogSummary.form=Forms:Tools.parseLogSummary
parseLogSummary.JAVA_MEM64=-Xmx1024m
parseLogSummary.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

schemacheck.filename=minestar.platform.persistence.service.tools.consistency.SchemaCheck
schemacheck.description=Check the database schema for consistency with the domain model metadata
schemacheck.tags=development
schemacheck.group=Setup

consistencychecker.filename=minestar.platform.persistence.service.tools.consistency.ConsistencyChecker
consistencychecker.description=Check that cross-references in the database are valid
consistencychecker.argcheck=<-n|s|c> [-h]
consistencychecker.tags=development
consistencychecker.group=Diagnostics

dataFileAppend.filename=minestar.platform.persistence.service.tools.datafilemanagement.DataFileAppend
dataFileAppend.description=Adds a Data File in Oracle.
dataFileAppend.invocation=import
dataFileAppend.tags=general
dataFileAppend.group=Workgroup
dataFileAppend.form=Forms:Tools.dataFileAppend
dataFileAppend.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/dataFileManagementTool.help
dataFileAppend.JAVA_MEM64=-Xms60M -Xmx350M

dbdataman.filename=minestar.platform.persistence.service.importexport.DBDataMan
dbdataman.description=Carry out data management tasks
dbdataman.tags=development
dbdataman.group=Admin
dbdataman.JAVA_MEM64=-Xms30M -Xmx350M
#dbdataman.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

exportDataToXml.filename=minestar.platform.persistence.service.importexport.xml.ExportData
exportDataToXml.job=true
exportDataToXml.description=Export of the requested dataset to xml
exportDataToXml.invocation=import
exportDataToXml.tags=admin,Workgroup
exportDataToXml.group=Admin
exportDataToXml.argnames=dataSets outputDirectory
exportDataToXml.form=Forms:Tools.exportDataToXml
exportDataToXml.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/exportDataToXml.help
exportDataToXml.JAVA_MEM64=-Xms60M -Xmx350M

exportDataToJSON.filename=com.mincom.tool.jsonexport.ExportDataToJSON
exportDataToJSON.description=Export of the requested dataset to JSON
exportDataToJSON.tags=admin,Workgroup
exportDataToJSON.argnames=datagroup filter
exportDataToJSON.JAVA_MEM64=-Xms90M -Xmx350M

exportTerrainDataToJSON.filename=com.mincom.tool.jsonexport.ExportTerrainDataToJSON
exportTerrainDataToJSON.description=Export of the requested Terrain dataset to JSON
exportTerrainDataToJSON.tags=admin,Workgroup
exportTerrainDataToJSON.argnames=datagroup filter
exportTerrainDataToJSON.JAVA_MEM64=-Xms90M -Xmx350M

databaseMode.filename=minestar.platform.persistence.service.tools.DatabaseMode
databaseMode.description=Enable / Disable Archive Mode on Database
databaseMode.invocation=import
databaseMode.tags=admin
databaseMode.group=Admin
databaseMode.argnames=archiveMode
databaseMode.form=Forms:Tools.databaseMode
databaseMode.JAVA_MEM64=-Xms60M -Xmx350M

rmanTools.filename=minestar.platform.persistence.service.tools.RmanTools
rmanTools.description=Backup Production Database
rmanTools.invocation=import
rmanTools.tags=general,Oracle
rmanTools.group=Workgroup
rmanTools.argnames=rmanBackupType rmanBaseDirectory
rmanTools.form=Forms:Tools.rmanTools
rmanTools.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/rmanTools.help
rmanTools.JAVA_MEM64=-Xms60M -Xmx350M

importDataFromXml.filename=minestar.platform.persistence.service.importexport.xml.ImportData
importDataFromXml.job=true
importDataFromXml.description=Import the data from the zipped xml export
importDataFromXml.invocation=import
importDataFromXml.tags=admin,Workgroup
importDataFromXml.group=Admin
importDataFromXml.argnames=importAllData overwriteExisting purgeFirst skipManagerCheck
importDataFromXml.form=Forms:Tools.importDataFromXml
importDataFromXml.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/importDataFromXml.help
importDataFromXml.JAVA_MEM64=-Xms60M -Xmx350M

importDataFromJSON.filename=com.mincom.tool.jsonexport.ImportDataFromJSON
importDataFromJSON.description=Import the requested JSON dataset
importDataFromJSON.tags=admin,Workgroup
importDataFromJSON.argnames=jsonfile method
importDataFromJSON.JAVA_MEM64=-Xms90M -Xmx350M

exportData.filename=bus/pythonlib/exportData.py
exportData.description=Export of the requested database and cleanup of previous exports
exportData.tags=development
exportData.group=Admin
exportData.argcheck=<DatabaseName> [<OutputDirectory>] [<DoZip>] [<BackupZip>] [<SendToSupport>] [<SendEmailOnError>]
exportData.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/exportData.help

exportDataStores.filename=bus/pythonlib/exportDataStores.py
exportDataStores.description=Export multiple Minestar databases in the same process.
exportDataStores.tags=admin
exportDataStores.group=Admin
exportDataStores.argnames=DoZip SendEmailOnError OutputDirectory DatabaseName
exportDataStores.form=Forms:Tools.exportDataStores

cleanExpiredData.filename=bus/pythonlib/cleanExpiredData.py
cleanExpiredData.description=Deletes Aged Entities from _HISTORICALDB datastore
cleanExpiredData.argcheck=[<includeCycleData>]
cleanExpiredData.argnames=includeCycleData
cleanExpiredData.tags=admin
cleanExpiredData.group=Admin
cleanExpiredData.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/cleanExpiredData.help
cleanExpiredData.JAVA_MEM64=-Xms60M -Xmx350M

deleteTempFiles.filename=minestar.util.file.FileDeleter
deleteTempFiles.description=Deletes temporary files
deleteTempFiles.tags=admin
deleteTempFiles.group=Admin
deleteTempFiles.form=Forms:Tools.deleteTempFiles

rollbackSchema.filename=com.mincom.tool.jsonexport.RollbackSchema
rollbackSchema.description=Rollback the database to the specified MineStar version
rollbackSchema.tags=admin,Workgroup
rollbackSchema.argnames=version
rollbackSchema.JAVA_MEM64=-Xms90M -Xmx350M
rollbackSchema.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5666


#### Admin Tools ####

patches.filename=bus/pythonlib/patches.py
patches.description=Command-line patch installation/de-installation tool
patches.argcheck=(on|off) <patchFile> ...
patches.tags=development
patches.group=Admin

enableAllPatches.filename=bus/pythonlib/enableAllPatches.py
enableAllPatches.description=Enables all patches in updates directory
enableAllPatches.tags=development
enableAllPatches.group=Admin

printPatches.filename=bus/pythonlib/printPatches.py
printPatches.description=Simple tool to list all patches currently activated
printPatches.argcheck=
printPatches.tags=admin
printPatches.group=Diagnostics

sendLogging.filename=sendConfig
sendLogging.description=Send a new logging configuration to an object server
sendLogging.argpaths=2
sendLogging.args=ObjectServer %1_ObjectServer_Logging %2
sendLogging.argcheck=<ObjectServer> <filename>
sendLogging.tags=admin
sendLogging.group=Admin

sendConfig.filename=bus/pythonlib/sendConfigWrapper.py
sendConfig.description=Send configuration to an administrable object
sendConfig.argcheck=<kind> <target> <configFile>
sendConfig.passBusUrl=1
sendConfig.tags=development
sendConfig.group=Admin

mstaremail.filename=bus/pythonlib/mstaremail.py
mstaremail.description=Hard to use utility for doing email operations
#mstaremail.argcheck=<to> <subject> <message> [attachments]
mstaremail.argcheck=...
mstaremail.tags=development
mstaremail.group=Admin

scheduleTask.filename=bus/pythonlib/scheduleTask.py
scheduleTask.description=Schedule a task to be run on the externally connected server
scheduleTask.argcheck=...
scheduleTask.tags=development
scheduleTask.group=Admin

publishObstacleTest.filename=bus/pythonlib/MstarGeoClientPublishObstacleTest.py
publishObstacleTest.description=Publishes obstacles to geo server
publishObstacleTest.tags=admin,Enterprise
publishObstacleTest.group=Admin
publishObstacleTest.argcheck=...

publishUnobservedCellsTest.filename=bus/pythonlib/MstarGeoClientPublishUnobservedCellsTest.py
publishUnobservedCellsTest.description=Publishes publish to geo server
publishUnobservedCellsTest.tags=admin,Enterprise
publishUnobservedCellsTest.group=Admin
publishUnobservedCellsTest.argcheck=...

cleanExpiredFiles.filename=bus/pythonlib/cleanExpiredFiles.py
cleanExpiredFiles.description=Clean up system generated and temporary files
cleanExpiredFiles.tags=admin,Enterprise
cleanExpiredFiles.group=Admin
cleanExpiredFiles.argcheck=
cleanExpiredFiles.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/cleanExpiredFiles.help

zip.filename=bus/pythonlib/zip.py
zip.description=Zips up files into an archive file
zip.argcheck=<outputFile> <inputFile> ...
zip.tags=development
zip.group=Admin

sendToSupport.filename=bus/pythonlib/sendToSupport.py
sendToSupport.description=Sends a file to MineStar support
sendToSupport.argcheck=<sendMethod> <file> [<fileTypeOrRecipient>]
sendToSupport.tags=development
sendToSupport.group=Admin

sendAllToSupport.filename=bus/pythonlib/sendToSupport.py
sendAllToSupport.description=Sends all the files in the Outgoing dir to MineStar support then moves them to the Sent dir
sendAllToSupport.argcheck=<sendMethod>
sendAllToSupport.argsendMethod_choices={"FTP":"FTP", "MSG":"Email message", "ATT":"Email attachment"}
sendAllToSupport.argsendMethod_defaultValue=FTP
sendAllToSupport.tags=admin
sendAllToSupport.group=Admin

makeSystem.filename=bus/pythonlib/makeSystem.py
makeSystem.description=Create or update a system
makeSystem.tags=admin
makeSystem.group=Setup
makeSystem.form=Forms:Tools.makeSystem
makeSystem.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/makeSystem.help

emptyWebDirectories.filename=bus/pythonlib/mstarweb.py
emptyWebDirectories.description=Delete temporary web applications used by Jetty

exportGeoLayers.filename=minestar.mine.service.gis.ExportGeoServerLayers
exportGeoLayers.description=Exports the GeoServer Layers as KMZ format.
exportGeoLayers.privilege=Snapshot System
exportGeoLayers.tags=general
exportGeoLayers.group=Diagnostics
exportGeoLayers.form=Forms:Tools.exportGeoLayers
exportGeoLayers.DEBUG=-Dlog4j.logger.httpclient.wire=DEBUG -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8888

splitLogFiles.filename=minestar.auditing.log.SplitLogFiles
splitLogFiles.description=Split large log files into smaller more manageable chunks
splitLogFiles.tags=general
splitLogFiles.group=Diagnostics

layerUpdateVersion.filename=minestar.wfs.LayerUpdateVersionTool
layerUpdateVersion.description=Tool to manually query and manipulate LayerUpdateVersions 
layerUpdateVersion.tags=general
layerUpdateVersion.group=Diagnostics

syncStandbyInformation.filename=bus/pythonlib/syncStandbyInformation.py
syncStandbyInformation.description=Copy failover configuration to a standby system
syncStandbyInformation.tags=general
syncStandbyInformation.group=Admin
syncStandbyInformation.privilege=Sync Standby Information

snapshotSystem.filename=bus/pythonlib/snapshotSystem.py
snapshotSystem.description=Capture the system state to a zip file
snapshotSystem.form=Forms:Tools.snapshotSystem
snapshotSystem.tags=general
snapshotSystem.group=Diagnostics
snapshotSystem.privilege=Snapshot System
snapshotSystem.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/snapshotSystem.help

createServerSnapshot.filename=com.mincom.explorer.page.snapshot.CreateServerSnapshot
createServerSnapshot.description=Trigger the creation of a Server Snapshot
createServerSnapshot.tags=general
createServerSnapshot.privilege=Snapshot System
createServerSnapshot.passBusUrl=1

initSystemFromSnapshot.filename=bus/pythonlib/initSystemFromSnapshot.py
initSystemFromSnapshot.description=unpack a snapshot to create or refresh a system
initSystemFromSnapshot.tags=admin
initSystemFromSnapshot.group=Admin
initSystemFromSnapshot.form=Forms:Tools.initSystemFromSnapshot
initSystemFromSnapshot.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/initSystemFromSnapshot.help

initStandbyDbFromSnapshot.filename=bus/pythonlib/initStandbyDbFromSnapshot.py
initStandbyDbFromSnapshot.description=unpack a snapshot to create or refresh a system
initStandbyDbFromSnapshot.tags=admin
initStandbyDbFromSnapshot.group=Admin
initStandbyDbFromSnapshot.form=Forms:Tools.initStandbyDbFromSnapshot
initStandbyDbFromSnapshot.help={MSTAR_HOME}/ext/Platform/Platform_Management/help/initStandbyDbFromSnapshot.help

initProdSystemFromSnapshot.filename=bus/pythonlib/initProdSystemFromSnapshot.py
initProdSystemFromSnapshot.description=unpack a snapshot to refresh a production system from standby
initProdSystemFromSnapshot.tags=admin
initProdSystemFromSnapshot.group=Admin
initProdSystemFromSnapshot.form=Forms:Tools.initProdSystemFromSnapshot

migrateStandbyDataToProduction.filename=bus/pythonlib/migrateStandbyDataToProduction.py
migrateStandbyDataToProduction.description=migrate standby data to production database
migrateStandbyDataToProduction.tags=admin
migrateStandbyDataToProduction.group=Admin
migrateStandbyDataToProduction.form=Forms:Tools.migrateStandbyDataToProduction

refreshBuild.filename=bus/pythonlib/refreshBuild.py
refreshBuild.description=check that the nominated build has been unpacked and unpack it if necessary
refreshBuild.tags=admin
refreshBuild.group=Setup
refreshBuild.form=Forms:Tools.refreshBuild

revertBuild.filename=bus/pythonlib/revertBuild.py
revertBuild.description=revert from the configured build to the installed build
revertBuild.tags=admin
revertBuild.group=Setup

postInstall.filename=bus/pythonlib/postInstall.py
postInstall.description=Fix minor issues after unzipping but before running a system
postInstall.argcheck=

#### FTP Tools ####

mstarftp.filename=bus/pythonlib/mstarftp.py
mstarftp.description=Generic utility for doing FTP operations
mstarftp.argcheck=<action> <file> ...
mstarftp.tags=development
mstarftp.group=Admin

ftpput.filename=bus/pythonlib/ftpput.py
ftpput.description=Put a file on the FTP server
ftpput.argcheck=<file> [<path>] [<fileType>]
ftpput.tags=development
ftpput.group=Admin

ftpget.filename=bus/pythonlib/ftpget.py
ftpget.description=Get a file from the FTP server
ftpget.argcheck=<file> [<path>] [<fileType>]
ftpget.tags=development
ftpget.group=Admin

ftpdir.filename=bus/pythonlib/ftpdir.py
ftpdir.description=Check whether a file is on the FTP server
ftpdir.argcheck=<file>
ftpdir.tags=development
ftpdir.group=Admin

ftpdel.filename=bus/pythonlib/ftpdel.py
ftpdel.description=Delete a file from the FTP server
ftpdel.argcheck=<file>
ftpdel.tags=development
ftpdel.group=Admin


#### Diagnostic Tools ####

grabState.filename=bus/pythonlib/grabState.py
grabState.description=Save MineStar servers internal statistics to a file
grabState.passBusUrl=1
grabState.tags=user
grabState.group=Diagnostics
grabState.argcheck=

jythonSession.filename=bus/pythonlib/jythonSession.py
jythonSession.description=Starts a Jython interpreter connected to the bus
jythonSession.passBusUrl=1
jythonSession.argcheck=
jythonSession.tags=development
jythonSession.group=Diagnostics

analysestate.filename=com.mincom.explorer.page.admin.ser.AnalyseSystemState
analysestate.description=Look for potential problems in a system state
analysestate.tags=development
analysestate.group=Diagnostics

viewstate.filename=com.mincom.explorer.page.admin.ser.ViewSystemState
viewstate.description=Browse a saved system state
viewstate.tags=development
viewstate.group=Diagnostics

logspeedo.filename=bus/pythonlib/logspeedo.py
logspeedo.description=Graphs speedo information from server log files
logspeedo.tags=development
logspeedo.group=Diagnostics
logspeedo.argcheck=...
logspeedo.doc="filenamePattern" means "all files whose name includes this string"

logspeedo2.filename=logspeedo
logspeedo2.description=LogSpeedo without exceptions but with buffer sizes
logspeedo2.argcheck=...
logspeedo2.args=%* . mMrstTUlBjLOEPq
logspeedo2.tags=admin
logspeedo2.group=Diagnostics
logspeedo2.doc="filenamePattern" means "all files whose name includes this string"

logspeedo3.filename=logspeedo
logspeedo3.description=Same as LogSpeedo2 but you need to specify the directory
logspeedo3.argcheck=...
logspeedo3.args=%* mMrstTUlBjLOEPqC
logspeedo3.tags=admin
logspeedo3.group=Diagnostics
logspeedo3.doc="filenamePattern" means "all files whose name includes this string"

summariseLogs.filename=bus/pythonlib/LogSummary.py
summariseLogs.argcheck=...
summariseLogs.tags=development
summariseLogs.group=Diagnostics
summariseLogs.description=Summarise log files to remove noise and see the frequency of different problems

queueSizes.filename=com.mincom.tool.analyser.QueueSizeGraph
queueSizes.description=Graph COS Notification queue sizes
queueSizes.tags=development
queueSizes.group=Diagnostics

showdconids.filename=mstargrep
# list of indices (0 based) of arguments to apply interpretPath to
showdconids.argpaths=0
# list of indices (0 based) of arguments to apply interpretFormat to
# shown here for educational purposes only
showdconids.argformats=
showdconids.args="{MSTAR_HOME}/logs/*.log" "dCon ID "
showdconids.description=Print dCON IDs from log files
showdconids.tags=development
showdconids.group=Diagnostics

snapshotDb.filename=bus/pythonlib/snapshotDb.py
snapshotDb.description=Database Snapshot Tool
snapshotDb.tags=admin
snapshotDb.group=Diagnostics
snapshotDb.argcheck=<DbName> [<RunMode>] [<OutputFilename>]
snapshotDb.argnames=DbName RunMode OutputFilename
snapshotDb.argRunMode_choices={"U":"User","H":"System"}
snapshotDb.argRunMode_defaultValue=U
snapshotDb.argRunMode_widget=radio
snapshotDb.argOutputFilename_widget=file

snapshotOs.filename=bus/pythonlib/snapshotOs.py
snapshotOs.description=Operating System Snapshot Tool
snapshotOs.tags=admin
snapshotOs.group=Diagnostics
snapshotOs.argnames=RunMode OutputFilename
snapshotOs.argRunMode_choices={"U":"User","H":"System"}
snapshotOs.argRunMode_defaultValue=U
snapshotOs.argRunMode_widget=radio
snapshotOs.argOutputFilename_widget=file

zipSnapshot.filename=bus/pythonlib/zipSnapshot.py
zipSnapshot.description=Creates an archive of Minestar system snapshot files
zipSnapshot.argformats=<SystemHome> <ZipFileName>
zipSnapshot.args=%*
zipSnapshot.tags=development
zipSnapshot.group=Diagnostics

inspectModel.filename=com.mincom.works.inspect.Inspect
inspectModel.description=MineStar Mine Model Inspection Tool
inspectModel.tags=user
inspectModel.group=Diagnostics
inspectModel.privilege=Inspect Model
inspectModel.passBusUrl=1
inspectModel.JAVA_MEM64=-Xms1024M -Xmx8192M

#### User Tools ####

updateMaterialGroup.filename=com.mincom.works.loader.UpdateMaterialGroup
updateMaterialGroup.description=Updates materials to specified MaterialGroup
updateMaterialGroup.passBusUrl=1
updateMaterialGroup.argcheck=<MaterialGroup>
updateMaterialGroup.argnames=MaterialGroup
updateMaterialGroup.tags=user
updateMaterialGroup.privilege=Update Material Group
updateMaterialGroup.group=Setup

whatClassesInWhatPatches.filename=com.mincom.tool.WhatClassesInWhatPatches
whatClassesInWhatPatches.description=Describes the classes contained in installed patches
whatClassesInWhatPatches.passBusUrl=1

processOsiskoGradeBlocks.filename=minestar.customer.osisko.mine.service.material.imports.PreprocessOsiskoGradeBlocks
processOsiskoGradeBlocks.description=Preprocessor for Osisko grade blocks
processOsiskoGradeBlocks.tags=user

processGemcomGradeBlocks.filename=minestar.mine.service.material.imports.GemcomFormatImporter
processGemcomGradeBlocks.description=Preprocessor for grade blocks exported from Gemcom
processGemcomGradeBlocks.tags=user

healthChannelSetup.filename=minestar.health.util.admin.PolledChannelConfigSetupImpl
healthChannelSetup.description=Health channel polling setup for VIMS 3G based devices
healthChannelSetup.invocation=admin,Expert
healthChannelSetup.argnames=<Machine Names comma seperated>
healthChannelSetup.passBusUrl=1

uploadHistory.filename=minestar.health.util.QueryUploadHistoryTool
uploadHistory.description=Tool for querying upload history H2 database
uploadHistory.args=%*

gisTools.filename=minestar.mine.service.gis.GISTools
gisTools.description=MineStar GIS Tools
gisTools.argnames=<command>

#### Command Tools ####
repairTruckSurface.filename=minestar.autonomy.util.RepairTruckSurface
repairTruckSurface.description=Tool to force a truck to reset all or part of its on-board surface
repairTruckSurface.tags=user
repairTruckSurface.passBusUrl=1

updatePlanAccessLanes.filename=minestar.autonomy.util.UpdatePlanAccessLanes
updatePlanAccessLanes.description=Identify and add access lanes to load and dump plans.
updatePlanAccessLanes.passBusUrl=1
updatePlanAccessLanes.tags=user

repairZoneMachineTypes.filename=minestar.autonomy.util.RepairZoneMachineTypes
repairZoneMachineTypes.description=Tool to remove invalid machine types from Zones
repairZoneMachineTypes.tags=user
repairZoneMachineTypes.passBusUrl=1
repairZoneMachineTypes.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5050

exportTractionEventsCSV.filename=minestar.autonomy.util.ExportTractionEventsCSV
exportTractionEventsCSV.passBusUrl=1
exportTractionEventsCSV.args=%*
exportTractionEventsCSV.directory={MSTAR_HOME}/bus/bin
exportTractionEventsCSV.description=Export traction events to CSV
exportTractionEventsCSV.tags=development
exportTractionEventsCSV.group=Admin
exportTractionEventsCSV.JAVA_MEM64=-Xms512m -Xmx2048m
exportTractionEventsCSV.DEBUG=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=15565

updateOnboards.filename=bus/pythonlib/updateOnboards.py
updateOnboards.description=Update onboard software supplied in extension
updateOnboards.tags=admin
updateOnboards.group=Setup

generateNotification.filename=com.mincom.tool.notification.GenerateNotification
generateNotification.description=Generate Notification Testing Tool
generateNotification.tags=development
generateNotification.group=Diagnostics
