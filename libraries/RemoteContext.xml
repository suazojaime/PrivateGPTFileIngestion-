<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2022 Caterpillar -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="rmiServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter" abstract="true">
        <property name="registry" ref="rmiRegistry"/>
        <property name="registryClientSocketFactory" ref="rmiSocketFactory"/>
        <property name="clientSocketFactory" ref="rmiSocketFactory"/>
        <property name="serverSocketFactory" ref="rmiSocketFactory"/>
    </bean>

    <bean id="userContextImpl" class="minestar.platform.uifacade.user.impl.UserContextImpl"
          lazy-init="true"/>

    <!-- Config Service -->
    <bean id="configServiceFacadeImpl" class="minestar.mine.service.util.ConfigServiceFacadeImpl">
        <property name="quantityDTOFactory" ref="quantityDTOFactory" />
        <property name="onboardConfigLoader" ref="onboardConfigLoader" />
    </bean>

    <bean id="onboardConfigLoader" class="minestar.mine.service.util.onboardconfig.OnboardConfigLoader">
        <property name="finder" ref="onboardConfigFinder" />
        <property name="parser" ref="onboardConfigParser" />
        <property name="merger" ref="onboardConfigMerger" />
    </bean>

    <bean id="onboardConfigFinder" class="minestar.mine.service.util.onboardconfig.OnboardConfigFinder"/>

    <bean id="onboardConfigParser" class="minestar.mine.service.util.onboardconfig.OnboardConfigParser"/>

    <bean id="onboardConfigMerger" class="minestar.mine.service.util.onboardconfig.OnboardConfigMerger"/>

    <bean id="registerConfigServiceFacadeImpl" parent="registrationInstance" lazy-init="true">
        <constructor-arg value="Config Service Facade"/>
        <constructor-arg value="minestar.mine.service.util.ConfigServiceFacade"/>
        <constructor-arg ref="configServiceFacadeImpl"/>
    </bean>

    <bean id="configServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="configServiceFacadeImpl"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="configServiceFacade"/>
        <property name="service" ref="configServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.util.ConfigServiceFacade"/>
    </bean>

    <!-- Layer Definition Service -->
    <bean id="layerDefinitionServiceImpl" class="minestar.mine.service.layer.impl.LayerDefinitionServiceImpl"
          lazy-init="true">
        <property name="publisher" ref="updatePublisher"/>
        <property name="dxfPointExporter" ref="dxfPointExporter"/>
        <property name="dxfLineExporter" ref="dxfLineExporter"/>
        <property name="dxfPolygonExporter" ref="dxfPolygonExporter"/>
        <property name="hazardConfig" ref="hazardConfigImpl"/>
    </bean>

    <bean id="registerLayerDefinitionServiceImpl" parent="registrationInstance" lazy-init="true">
        <constructor-arg value="Layer Definition Service"/>
        <constructor-arg value="minestar.mine.service.layer.LayerDefinitionService"/>
        <constructor-arg ref="layerDefinitionServiceImpl"/>
    </bean>

    <bean id="layerDefinitionServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="layerDefinitionServiceImpl"/>
            </bean>
        </property>
    </bean>


    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="layerDefinitionServiceImpl"/>
        <property name="service" ref="layerDefinitionServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.layer.LayerDefinitionService"/>
    </bean>


    <!-- Licence Service -->
    <bean id="licenseServiceFacade" class="minestar.mine.service.license.LicenseServiceFacadeImpl" init-method="init"/>

    <bean id="licenseServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="licenseServiceFacade"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="licenseServiceFacade"/>
        <property name="service" ref="licenseServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.license.LicenseServiceFacade"/>
    </bean>

    <!-- Job Scheduler Service -->
    <bean id="jobSchedulerServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="jobSchedulerService"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="jobSchedulerServiceFacade"/>
        <property name="service" ref="jobSchedulerServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.job.minelayout.JobSchedulerServiceFacade"/>
    </bean>

    <bean id="jobEventPublisher" class="minestar.pitlink.service.communications.BasicPublisher" lazy-init="true">
        <constructor-arg value="fieldEvent"/>
        <property name="jmsTemplate" ref="jmsTemplate"/>
        <property name="topic" ref="jobEventPublishTopic"/>
    </bean>

    <bean id="jobEventPublishTopic" class="org.apache.activemq.artemis.jms.client.ActiveMQTopic" lazy-init="true">
        <constructor-arg value="minestar.event.job.publish"/>
    </bean>

    <bean id="jobSchedulerService" class="minestar.mine.service.job.minelayout.JobSchedulerServiceFacadeImpl">
        <property name="scheduler" ref="quartzSchedulerImpl"/>
        <property name="publisher" ref="jobEventPublisher"/>
        <property name="validJobClasses">
            <list>
                <value>com.mincom.works.cc.personnel.util.PersonnelImportJob</value>
                <value>com.mincom.integ.cat.equip.onboard.commands.GenerateMineStarFiles</value>
            </list>
        </property>
    </bean>

    <!-- Machine Service -->
    <bean id="machineServiceFacade" class="minestar.mine.service.machine.MachineServiceFacadeImpl"
          lazy-init="true">
        <property name="dimensionManagementService" ref="dimensionManagementServiceImpl" />
        <property name="machineIconService" ref="machineIconServiceImpl" />
        <property name="mineFleetService" ref="mineFleetServiceImpl" />
        <property name="onboardHardwareService" ref="onboardHardwareServiceImpl"/>
        <property name="machineDtoFactory" ref="machineDTOFactory" />
        <property name="quantityDTOFactory" ref="quantityDTOFactory" />
        <property name="publisher" ref="updatePublisher"/>
        <property name="configServiceFacade" ref="configServiceFacadeImpl"/>
    </bean>

    <bean id="machineServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="machineServiceFacade"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="machineServiceFacade"/>
        <property name="service" ref="machineServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.machine.MachineServiceFacade"/>
    </bean>

    <!-- Pit Model Service Facade -->
    <bean id="pitModelServiceFacade" class="minestar.pitlink.service.pitmodel.facade.PitModelServiceFacadeImpl"
          lazy-init="true">
        <property name="pitModelService" ref="pitModelServiceImpl" />
        <property name="personnelService" ref="personnelServiceImpl" />
        <property name="mineFleetService" ref="mineFleetServiceImpl" />
        <property name="quantityDTOFactory" ref="quantityDTOFactory" />
        <property name="machineInPitDTOFactory" ref="machineInPitDTOFactory" />
    </bean>

    <bean id="pitModelServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="pitModelServiceFacade"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="pitModelServiceFacade"/>
        <property name="service" ref="pitModelServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.pitlink.service.pitmodel.facade.PitModelServiceFacade"/>
    </bean>

    <!-- Remote Unit Factory -->
    <bean id="remoteUnitFactoryProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="remoteUnitFactory"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="remoteUnitFactory"/>
        <property name="service" ref="remoteUnitFactoryProxy"/>
        <property name="serviceInterface" value="com.mincom.util.unit.remote.RemoteUnitFactory"/>
    </bean>

    <!-- Search Service -->
    <bean id="searchServiceFacade" class="minestar.mine.uifacade.search.impl.SearchServiceImpl"
          lazy-init="true">
        <property name="machineDtoFactory" ref="machineDTOFactory" />
        <property name="jobSchedulerServiceFacade" ref="jobSchedulerService" />
        <property name="mineFleetService" ref="mineFleetServiceImpl"/>
        <property name="personnelService" ref="personnelServiceImpl"/>
    </bean>

    <bean id="searchServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="searchServiceFacade"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="searchServiceFacade"/>
        <property name="service" ref="searchServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.uifacade.search.SearchService"/>
    </bean>

    <!-- Security Service -->
    <bean id="securityServiceImpl" class="minestar.control.service.security.impl.SecurityServiceImpl"
          lazy-init="true">
        <constructor-arg name="permissionService" ref="permissionServiceImpl"/>
    </bean>

    <bean id="registerSecurityServiceImpl" parent="registrationInstance" lazy-init="true">
        <constructor-arg value="Security Service"/>
        <constructor-arg value="minestar.control.service.security.SecurityService"/>
        <constructor-arg ref="securityServiceImpl"/>
    </bean>

    <bean id="securityServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="securityServiceImpl"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="securityServiceImpl"/>
        <property name="service" ref="securityServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.control.service.security.SecurityService"/>
    </bean>


    <!-- Site Editor Service -->
    <bean id="siteEditorServiceImpl" class="minestar.mine.service.minemodel.SiteEditorServiceImpl" >
        <property name="hazardServiceFacade" ref="hazardServiceFacade" />
        <property name="zoneServiceFacade" ref="zoneServiceFacade" />
    </bean>

    <bean id="siteEditorServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="siteEditorServiceImpl"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="siteEditorServiceFacade"/>
        <property name="service" ref="siteEditorServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.minemodel.SiteEditorService"/>
    </bean>


    <!-- User Service -->
    <bean id="userServiceFacade" class="minestar.mine.service.personnel.UserServiceFacadeImpl" lazy-init="true">
        <property name="userService" ref="userServiceImpl" />
        <property name="publisher" ref="updatePublisher"></property>
    </bean>

    <bean id="userServiceFacadeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="userServiceFacade"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="userServiceFacade"/>
        <property name="service" ref="userServiceFacadeProxy"/>
        <property name="serviceInterface" value="minestar.mine.service.personnel.UserServiceFacade"/>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="coverageService"/>
        <property name="service" ref="coverageServiceProxy"/>
        <property name="serviceInterface" value="minestar.geometry.wcs.CoverageService"/>
    </bean>

    <bean id="coverageServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="coverageServiceImpl"/>
            </bean>
        </property>
    </bean>

    <bean parent="rmiServiceExporter">
        <property name="serviceName" value="dxfRasterizer"/>
        <property name="service" ref="dxfRasterizerProxy"/>
        <property name="serviceInterface" value="minestar.geometry.surface.DxfRasterizer"/>
    </bean>

    <bean id="dxfRasterizerProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="targetSource">
            <bean class="org.springframework.aop.target.LazyInitTargetSource">
                <property name="targetBeanName" value="dxfRasterizerImpl"/>
            </bean>
        </property>
    </bean>
</beans>
