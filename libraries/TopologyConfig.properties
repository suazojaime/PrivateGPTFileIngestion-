# Copyright (c) 2023 Caterpillar

# $Id: TopologyConfig.properties,v 1.12 2005-12-29 03:11:16 ianc Exp $

## General ##

## Logging ##
## @mode region

# @label Enable File Logging
log.message.file=true


# File name and directory substitutions:<br>
# * {0} -> process name (system property app.name)<br>
# * {1} -> app directory (system property MSTAR_HOME)<br>
# * {2} -> date & time (use Java date formatting, see java.text.SimpleDateFormat)<br>
# * {3} -> same as {2}<br>
# * {4} -> rollover date format (use Java date formatting, see java.text.SimpleDateFormat)<br>
# * {5} -> log directory (system property MSTAR_LOGS)<br>
# * {6} -> trace directory (system property MSTAR_TRACE)
# * {7} -> host name
# @label Log File Specification
log.message.file.spec=file("{5}/{0}_{7}_{4}.log", "daily", "MMdd", "00:00")

## Tracing ##
## @mode region

# @label Enable Tracing
log.trace.on=true

# @label Timestamp Trace Messages
log.trace.decorate.timestamp=true


## Message Formats ##

# The format for log messages where no other format is specified
# @label Log
log.message.format=${level(message)}: {${timestamp} }{${message.resource} }

# The format for error messages
# @label Error
log.message.format.error=${level(message)}: {${timestamp} }{[${thread.id}] }{[${class(short)}] }{${message.resource} }{Thread ${thread}}{\nSTACKTRACE:\n${stacktrace}}{\nTHROWABLE: ${throwable}}

# The format for warning messages
# @label Warning
log.message.format.warning=${level(message)}: {${timestamp} }{[${thread.id}] }{[${class(short)}] }{${message.resource} }

# The format for info messages
# @label Info
log.message.format.info=${level(message)}: {${timestamp} }{[${thread.id}] }{[${class(short)}] }{${message.resource} }

# The format for bug messages
# @label Bug
log.message.format.bug=${level(message)}: {${timestamp} }{[${thread.id}] }{[${class(short)}] }{${message.resource} }{Thread ${thread}}{\nSTACKTRACE:\n${stacktrace}}{\nTHROWABLE: ${throwable}}

# The format for performance messages
# @label Performance
log.message.format.performance=${level(message)}: {${timestamp} }{${message.resource} }

# The format for trace messages
# @label Trace
log.trace.format={${timestamp} }{[${thread.id}] }{[${class(short)}] }{${message.resource} }


## Packages to Trace ##

! Some defaults until levels configurable via supervisor ...

# @label works.assignment2
log.trace.pf.com.mincom.works.assignment2=(1,console()),(1,file("works_assignment_{0}_{4}.log", "daily", "MMdd", "00:00"))

# @label works.cc.cycles
log.trace.pf.com.mincom.works.cc.cycle=(1,console()),(3,file("works_cc_cycle_{0}_{4}.log", "daily", "MMdd", "00:00"))

# @label works.cc.delay
log.trace.pf.minestar.production.service.delay=(1,console()),(5,file("works_cc_delay_{0}_{4}.log", "daily", "MMdd", "00:00"))

# @label kpisummaries
log.trace.pf.minestar.production.service.kpisummaries=(1,console()),(3,file("kpisummaries_{0}_{4}.log", "daily", "MMdd", "00:00"))

# @label machinetracking
log.trace.pf.minestar.machinetracking=(4,console()),(5,file("machinetracking_{0}_{4}.log", "daily", "MMdd", "00:00"))

#log.trace.pf.minestar.pitlink.service.pitmodel=(3,console()),(3,file("pms_new_{0}_{4}.log", "daily", "MMdd", "00:00"))
#log.trace.pf.com.mincom.works.cc.machine.corba=(3,console()),(3,file("pms_legacy_{0}_{4}.log", "daily", "MMdd", "00:00"))


## Custom Packages ##
## @mode region
## @label

