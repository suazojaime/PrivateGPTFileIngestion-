<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2021 Caterpillar -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       ">

    <!-- The recommended method of transactions support is using the @Transactional annotation -->
    <tx:annotation-driven transaction-manager="minestarTransactionManager" order="1" />

    <!-- Declarative transaction stuff -->
    <!-- TODO: Migrate all service methods to use @Transactional annotations so this can be removed -->
    <tx:advice id="minestarTransactionAdvice" transaction-manager="minestarTransactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- read-only -->
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="retrieve*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="is*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="has*" propagation="SUPPORTS" read-only="true"/>
            <!-- writable -->
            <tx:method name="update*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="merge*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="set*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="store*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="execute*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="build*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="process*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="reset*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="activate*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="deactivate*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="clear*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="cancel*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="assign*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="request*" propagation="REQUIRED" rollback-for="-Exception"/>
            <tx:method name="noTx*" propagation="SUPPORTS" no-rollback-for="-Exception"/>
            <!--<tx:method name="*"/>-->
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!-- Match:
          1) Methods from Service*Impl classes
          2) Where the class does NOT have the @NoSpringProxy annotation
          3) Where the class does NOT have the @Transactional annotation
          4) Where the method does NOT have the @Transactional annotation
          -->
        <aop:advisor pointcut="execution(* minestar.health.impl..*.*Service*Impl.*(..)) and not @within(minestar.platform.service.NoSpringProxy) and not @within(org.springframework.transaction.annotation.Transactional) and not @annotation(org.springframework.transaction.annotation.Transactional))"
                     advice-ref="minestarTransactionAdvice" order="27"/>
        <aop:advisor pointcut="execution(* minestar.*.service..*.*Service*Impl.*(..)) and not @within(minestar.platform.service.NoSpringProxy) and not @within(org.springframework.transaction.annotation.Transactional) and not @annotation(org.springframework.transaction.annotation.Transactional))"
                     advice-ref="minestarTransactionAdvice" order="25"/>
    </aop:config>

</beans>
